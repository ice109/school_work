#include <GL/glut.h>

GLint height, width, size = 0;
GLbyte *image = NULL;
int i,j=0;

void ray_tracer(){
  width = 512;
  height = 512;
  size = width*height;
  image = (GLbyte*)malloc(sizeof(GLbyte)*size*3);

  for(i = 0; i < size*3; i=i+width*3){
    for(j = i; j < width*3; j=j+3){
      image[j] = 0xFF;
      image[j+1] = 0x00;
      image[j+2] = 0x00;
    }
  }
}



void display(void)
{
    //Clear all pixels
    glClear(GL_COLOR_BUFFER_BIT);
    
    ray_tracer();
    
    glDrawPixels(width, height, GL_RGB, GL_BYTE, image);
    //draw white polygon (rectangle) with corners at
    // (0.25, 0.25, 0.0) and (0.75, 0.75, 0.0)
    // glColor3f(1.0,1.0,1.0);
    // glBegin(GL_POLYGON);
    //     glVertex3f(0.25, 0.25, 0.0);
    //     glVertex3f(0.75, 0.25, 0.0);
    //     glVertex3f(0.75, 0.75, 0.0);
    //     glVertex3f(0.25, 0.75, 0.0);
    // glEnd();
    
    // Don't wait start processing buffered OpenGL routines
    glFlush();
}

void init(void)
{
    //select clearing (background) color
    glClearColor(0.0, 0.0, 0.0, 0.0);

    //initialize viewing values 
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    //glOrtho(0.0, 1.0, 0.0, 1.0, -1.0, 1.0);

}

int main(int argc, char** argv)
{
    //Initialise GLUT with command-line parameters. 
    glutInit(&argc, argv);
    
    //Set Display Mode
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    
    //Set the window size
    glutInitWindowSize(256,256);
    
    //Set the window position
    glutInitWindowPosition(100,100);
    
    //Create the window
    glutCreateWindow("A Simple OpenGL Windows Application with GLUT");
    
    //Call init (initialise GLUT
    init();
    
    //Call "display" function
    glutDisplayFunc(display);
    
    //Enter the GLUT event loop
    glutMainLoop();

    return 0;
}
