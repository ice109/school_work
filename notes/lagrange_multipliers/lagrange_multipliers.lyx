#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass amsart
\begin_preamble
\usepackage{cancel}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Lagrange Multipliers over coffee
\end_layout

\begin_layout Author
Maksim Levental
\end_layout

\begin_layout Section
Theory
\end_layout

\begin_layout Standard
There is absolutely only one
\series bold
 
\series default
thing you need to know to understand Lagrange multiplers and it's so simple
 you can digest it over coffee (don't worry this note is as long as it is
 only because I included lots of pictures).
 It is the 
\series bold
linear approximation
\series default
 to 
\begin_inset Formula $f$
\end_inset

 at a point 
\begin_inset Formula $\mathbf{a}$
\end_inset

 where 
\begin_inset Formula $f$
\end_inset

 is differentiable
\begin_inset Formula 
\[
L\left(\mathbf{x}\right)=f\left(\mathbf{a}\right)+\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}\cdot\left(\mathbf{x}-\mathbf{a}\right)
\]

\end_inset

It's called the 
\emph on
linear 
\emph default
approximation because, for example in one dimension, with 
\begin_inset Formula $m=\left.\nabla f\left(x\right)\right|_{x=a}$
\end_inset

 the equation reads
\begin_inset Formula 
\begin{align*}
L\left(x\right) & =f\left(a\right)+m\cdot\left(x-a\right)\\
 & =mx+\left(f\left(a\right)-ma\right)
\end{align*}

\end_inset

which is the equation of a line with slope 
\begin_inset Formula $m$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

-intercept 
\begin_inset Formula $\left(f\left(a\right)-ma\right)$
\end_inset

.
 But what gives us the right to say is 
\begin_inset Formula $L$
\end_inset

 is an approximation of 
\begin_inset Formula $f$
\end_inset

? Even if it is an approximation is it a good approximation? And if so,
 in what sense is it good? 
\end_layout

\begin_layout Standard
Intuitively it's a good approximation because 
\begin_inset Formula $f$
\end_inset

 is differentiable and differentiability is a measure of smoothness.
 For example functions that are infinitely differentiable are just called
 
\emph on
smooth 
\emph default
and a once-differentiable function is 
\begin_inset Quotes eld
\end_inset

smooth
\begin_inset Quotes erd
\end_inset

 in the exactly the sense that it admits a linear approximation.
 
\end_layout

\begin_layout Standard
Ok enough intuition.
 What do I need to show to actually prove that 
\begin_inset Formula $L$
\end_inset

 is a good approximaton of 
\begin_inset Formula $f$
\end_inset

 in the neighborhood of a point 
\begin_inset Formula $\mathbf{a}$
\end_inset

, where 
\begin_inset Formula $f$
\end_inset

 is differentiable at 
\begin_inset Formula $\mathbf{a}$
\end_inset

.
 Well I need to show that in using 
\begin_inset Formula $L\left(\mathbf{x}\right)$
\end_inset

 as a substitute for 
\begin_inset Formula $f\left(\mathbf{x}\right)$
\end_inset

 I incur an error that is small and becomes smaller as 
\begin_inset Formula $\mathbf{x}$
\end_inset

 approaches 
\begin_inset Formula $\mathbf{a}$
\end_inset

.
 Namely that the error 
\begin_inset Formula $e\left(\mathbf{x}\right)=\left|f\left(\mathbf{x}\right)-L\left(\mathbf{x}\right)\right|$
\end_inset

 is 
\series bold
small
\series default
 as 
\begin_inset Formula $\mathbf{x}$
\end_inset

 approaches 
\begin_inset Formula $\mathbf{a}$
\end_inset

.
 I'm going to sketch the argument for 
\begin_inset Formula $f$
\end_inset

 a function of a single variable 
\begin_inset Formula $x$
\end_inset

 and then indicate how it can be generalized to multivariate 
\begin_inset Formula $f$
\end_inset

.
 
\end_layout

\begin_layout Standard
What do I have at my disposal? I have that 
\begin_inset Formula $f$
\end_inset

 is differentiable at 
\begin_inset Formula $a$
\end_inset

, i.e.
 that the derivative 
\begin_inset Formula $f'\left(a\right)$
\end_inset

 exists; this limit exists
\begin_inset Formula 
\begin{align*}
\lim_{x\rightarrow a} & \frac{f\left(x\right)-f\left(a\right)}{x-a}=f'\left(a\right)
\end{align*}

\end_inset

But this is trivially equivalent to
\begin_inset Formula 
\begin{align*}
\lim_{x\rightarrow a} & \frac{f\left(x\right)-f\left(a\right)}{x-a}-f'\left(a\right)=0
\end{align*}

\end_inset

and underneath the calculus machinery what this really mean is that for
 all 
\begin_inset Formula $\epsilon$
\end_inset

 blah blah blah there exists 
\begin_inset Formula $\delta$
\end_inset

 such that 
\begin_inset Formula 
\[
\left|\frac{f\left(x\right)-f\left(a\right)}{x-a}-f'\left(a\right)\right|<\epsilon
\]

\end_inset

Now we're almost done
\begin_inset Formula 
\begin{align*}
\left|x-a\right|\left|\frac{f\left(x\right)-f\left(a\right)}{x-a}-f'\left(a\right)\right| & <\epsilon\left|x-a\right|\\
\left|\left(x-a\right)\left(\frac{f\left(x\right)-f\left(a\right)}{x-a}-f'\left(a\right)\right)\right| & <\epsilon\left|x-a\right|\\
\left|f\left(x\right)-f\left(a\right)-f'\left(a\right)\left(x-a\right)\right| & <\epsilon\left|x-a\right|\\
\left|f\left(x\right)-L\left(x\right)\right| & <\epsilon\left|x-a\right|
\end{align*}

\end_inset

What does this say? It says that near 
\begin_inset Formula $a$
\end_inset

 the error made in using the value 
\begin_inset Formula $L\left(x\right)$
\end_inset

 as an approximation for the value 
\begin_inset Formula $f\left(x\right)$
\end_inset

 is less than 
\begin_inset Formula $\left|x-a\right|$
\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
In fact much smaller since 
\begin_inset Formula $\epsilon$
\end_inset

 will be much smaller than 1.
\end_layout

\end_inset

 i.e.
 strictly dominated
\begin_inset Foot
status open

\begin_layout Plain Layout
Maybe you know this, maybe you don't, but this is exactly the condition
 for 
\begin_inset Formula $e\left(x\right)=\left|L\left(x\right)-f\left(x\right)\right|$
\end_inset

 to be little 
\begin_inset Formula $o\left(\left|x-a\right|\right)$
\end_inset

 as 
\begin_inset Formula $x$
\end_inset

 approaches 
\begin_inset Formula $a$
\end_inset

.
\end_layout

\end_inset

 by how far you are from 
\begin_inset Formula $a$
\end_inset

 .
 So now I'm justified in writing that 
\begin_inset Formula 
\[
f\left(x\right)\approx f\left(a\right)+f'\left(a\right)\left(x-a\right)
\]

\end_inset


\end_layout

\begin_layout Standard
How to generalize this to 
\begin_inset Formula $f$
\end_inset

 a function of 
\begin_inset Formula $n$
\end_inset

 variables? If the domain of 
\begin_inset Formula $f$
\end_inset

 is an open set then we can restrict 
\series bold
x 
\series default
to a neighborhood of 
\series bold
a 
\series default
and parameterize the line from 
\begin_inset Formula $\mathbf{a}$
\end_inset

 to 
\begin_inset Formula $\mathbf{x}$
\end_inset

 by the single variable vector valued function 
\begin_inset Formula $\mathbf{u}\left(t\right)=\mathbf{a}+t\left(\mathbf{x}-\mathbf{a}\right)$
\end_inset

.
 Then 
\begin_inset Formula $g\left(t\right)=f\left(\mathbf{u}\left(t\right)\right)$
\end_inset

 is again a single variable real valued differentiable function such that
 
\begin_inset Formula $g\left(1\right)=f\left(\mathbf{x}\right)$
\end_inset

 and 
\begin_inset Formula $g\left(0\right)=f\left(\mathbf{a}\right)$
\end_inset

 and using the above result we construct the linear approximation for 
\begin_inset Formula $g\left(1\right)$
\end_inset

 at 
\begin_inset Formula $t=0$
\end_inset

 
\begin_inset Formula 
\begin{align*}
g\left(1\right) & \approx g\left(0\right)+g'\left(0\right)\left(1-0\right)\\
f\left(\mathbf{x}\right) & \approx f\left(\mathbf{a}\right)+g'\left(0\right)
\end{align*}

\end_inset

But what is 
\begin_inset Formula $g'\left(0\right)$
\end_inset

? Using the chain rule
\begin_inset Formula 
\begin{align*}
g'\left(0\right) & =\left.\frac{\partial}{\partial x_{1}}f\left(\mathbf{u}\left(t\right)\right)\frac{d}{dt}\mathbf{u}\left(t\right)\right|_{t=0}+\left.\frac{\partial}{\partial x_{2}}f\left(\mathbf{u}\left(t\right)\right)\frac{d}{dt}\mathbf{u}\left(t\right)\right|_{t=0}+\cdots+\left.\frac{\partial}{\partial x_{n}}f\left(\mathbf{u}\left(t\right)\right)\frac{d}{dt}\mathbf{u}\left(t\right)\right|_{t=0}\\
 & =\frac{\partial f}{\partial x_{1}}\cdot\left(x_{1}-a_{1}\right)+\frac{\partial f}{\partial x_{2}}\cdot\left(x_{2}-a_{2}\right)+\cdots+\frac{\partial f}{\partial x_{n}}\cdot\left(x_{n}-a_{n}\right)\\
 & =\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}\cdot\left(\mathbf{x}-\mathbf{a}\right)
\end{align*}

\end_inset

Tada!
\begin_inset Formula 
\[
f\left(\mathbf{x}\right)\approx f\left(\mathbf{a}\right)+\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}\cdot\left(\mathbf{x}-\mathbf{a}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
This marks the end of the real math.
 If you don't understand, don't care, or don't want to know just take away
 from this that for a differentiable
\begin_inset Foot
status open

\begin_layout Plain Layout
I'll just note that this is not a trivial characterization of smoothness.
 You might think that all continuous functions admit linear approximations.
 Obvious counter-examples include 
\begin_inset Formula $f\left(x\right)=\left|x\right|$
\end_inset

 and other piecewise defined functions.
 Now you might think that at worst continuous functions might fail to be
 smooth at only a finite (or at most countable) number of points in their
 domain.
 Well here's a continuous function that is 
\series bold
nowhere differentiable
\series default
; for 
\begin_inset Formula $b\in\mathbb{Z}$
\end_inset

 and 
\begin_inset Formula $0<a<1$
\end_inset

 and 
\begin_inset Formula $ab>1+(3/2)\pi$
\end_inset


\series bold
 
\begin_inset Formula 
\[
f\left(x\right)=\sum_{i=1}^{\infty}a^{n}\cos\left(b^{n}\pi x\right)
\]

\end_inset


\series default
is continuous everywhere but has derivatives nowhere.
 The plot is at the bottom of the next page; clearly not very smooth.
\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centerline{
\end_layout

\end_inset


\begin_inset Graphics
	filename WeierstrassFunction.svg
	scale 20

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset

 
\begin_inset Formula $f$
\end_inset

 the linear approximation is good near the point at which the approximation
 is constructed.
\end_layout

\begin_layout Standard
Now that we have the linear approximation in hand what can we conclude about
 general differentiable 
\begin_inset Formula $f$
\end_inset

 using it? The first thing is what happens when
\begin_inset Formula 
\begin{align*}
f\left(\mathbf{x}\right) & \approx f\left(\mathbf{a}\right)+\underbrace{\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}\cdot\left(\mathbf{x}-\mathbf{a}\right)}_{0}\\
f\left(\mathbf{x}\right) & \approx f\left(\mathbf{a}\right)
\end{align*}

\end_inset

That is 
\begin_inset Formula $f\left(\mathbf{x}\right)-f\left(\mathbf{a}\right)\approx0$
\end_inset

, i.e.
 
\begin_inset Formula $f$
\end_inset

 doesn't change.
 Belaboring it: 
\begin_inset Formula $f$
\end_inset

 doesn't increase nor decrease.
 So 
\series bold
a
\series default
 must be a 
\emph on
stationary point 
\emph default
and 
\begin_inset Formula $f\left(\mathbf{a}\right)$
\end_inset

 must be a local optimum
\begin_inset Foot
status open

\begin_layout Plain Layout
Minimum, maximum, or inflection point.
\end_layout

\end_inset

.
 What I'm saying is
\series bold
 
\series default
that
\series bold
 when the product 
\begin_inset Formula $\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}\cdot\left(\mathbf{x}-\mathbf{a}\right)$
\end_inset

 is 0 
\series default
then 
\begin_inset Formula $f$
\end_inset

 doesn't change
\series bold
 
\series default
and 
\begin_inset Formula $f\left(\mathbf{a}\right)$
\end_inset

 must be a local optimum,
\series bold
 NOT WHEN 
\begin_inset Formula $\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}=0$
\end_inset


\series default
.
 If you're uncomfortable with the shift in focus from 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}$
\end_inset

 to 
\begin_inset Formula $\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}\cdot\left(\mathbf{x}-\mathbf{a}\right)$
\end_inset

 reassure yourself by noticing that for 
\begin_inset Formula $f$
\end_inset

 a function of a single variable the only way 
\begin_inset Formula 
\[
\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}\cdot\left(\mathbf{x}-\mathbf{a}\right)=f'\left(a\right)\cdot\left(x-a\right)=0
\]

\end_inset

is if 
\begin_inset Formula $f'\left(a\right)=0$
\end_inset

.
 So it coincides with what you already know and the point is that the product
 being zero is the appropriate generalization
\begin_inset Foot
status open

\begin_layout Plain Layout
Of course it's still true that if 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}=0$
\end_inset

 for all 
\begin_inset Formula $\mathbf{x}$
\end_inset

 in a neighborhood of 
\begin_inset Formula $\mathbf{a}$
\end_inset

 then 
\begin_inset Formula $f\left(\mathbf{a}\right)$
\end_inset

 is local optimum (minimum or maximum) but for multivariate functions inflection
 points (or 
\family default
\series default
\shape default
\emph on
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
saddle points
\emph default
) can occur at points where 
\family roman
\series medium
\shape up
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}\neq0$
\end_inset

.
\end_layout

\end_inset

for 
\begin_inset Formula $f$
\end_inset

 a multivariate function.
 The second thing is that 
\begin_inset Formula $f\left(\mathbf{x}\right)-f\left(\mathbf{a}\right)$
\end_inset

 is maximized when 
\begin_inset Formula $\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}\cdot\left(\mathbf{x}-\mathbf{a}\right)$
\end_inset

 is maximized and this occurs when 
\begin_inset Formula $\left(\mathbf{x}-\mathbf{a}\right)$
\end_inset

 is in the same direction as 
\begin_inset Formula $\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}$
\end_inset

.
 Therefore the direction of 
\begin_inset Quotes eld
\end_inset

steepest ascent
\begin_inset Quotes erd
\end_inset

 is 
\begin_inset Formula $\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}$
\end_inset

.
 This is not very important for understanding Lagrange multipliers but it's
 important for things like gradient descent and conjugate gradients so it's
 worth mentioning.
 
\end_layout

\begin_layout Section
Practice
\begin_inset CommandInset label
LatexCommand label
name "sec:Practice"

\end_inset


\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Okay finally I'm going to draw some pictures
\begin_inset Foot
status open

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Most are actually they're shamelessly stolen from 
\end_layout

\begin_layout Plain Layout

\family typewriter
\size normal
http://www.cs.cmu.edu/~quake-papers/painless-conjugate-gradient.pdf
\family roman
\series medium
\shape up
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\end_layout

\end_inset

.
 Here's a function of two variables 
\begin_inset Formula $f\left(x_{1},x_{2}\right)=\frac{3x_{1}^{2}}{2}+3x_{2}^{2}+2x_{1}x_{2}-2x_{1}+8x_{2}$
\end_inset

, whose plot appears in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "parab"

\end_inset

.
 It has a global minimum at 
\begin_inset Formula $\left(2,-2\right)$
\end_inset

, as can be seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "parab-1"

\end_inset

.
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Graphics
	filename 3dplot2.png
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Paraboloid
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset CommandInset label
LatexCommand label
name "parab"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Graphics
	filename glob_min.png
	scale 40

\end_inset


\begin_inset Caption

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Level curves
\begin_inset CommandInset label
LatexCommand label
name "parab-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Now suppose I wanted to minimize 
\begin_inset Formula $f$
\end_inset

 subject to the constraint 
\begin_inset Formula $x_{2}=(2/3)x_{1}-(2/3)$
\end_inset

, i.e.
 along this line.
 This is equivalent to finding a point on the intersection of a plane with
 the surface as shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Intersection"

\end_inset

.
 How to proceed? Let's 
\family default
\series default
\shape default
\size default
\emph on
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
linearize
\emph default
 
\begin_inset Formula $f$
\end_inset

 around points on the line we're constrained to move along and then w
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
e can use our result that stationary points 
\family default
\series bold
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
a
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 occur where 
\begin_inset Formula $\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}\cdot\left(\mathbf{x}-\mathbf{a}\right)=0$
\end_inset

.
 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Graphics
	filename constrained3dplot.png
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Intersection
\begin_inset CommandInset label
LatexCommand label
name "fig:Intersection"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename gradients.png
	scale 45

\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Caption

\begin_layout Plain Layout
Constrained gradient
\begin_inset CommandInset label
LatexCommand label
name "fig:Constrained-gradient"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset

Note that both 
\family default
\series bold
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
a 
\series default
and 
\series bold
x 
\series default
are on the line 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $x_{2}=(2/3)x_{1}-(2/3)$
\end_inset

.
 For 
\family default
\series bold
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
x 
\series default
it's because our constraint requires it to be so and for 
\series bold
a 
\series default
it's because we decided to compute the linear approximation to 
\begin_inset Formula $f$
\end_inset

 at points on the line.
 Therefore the vector
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\begin_inset Formula $\mathbf{x}-\mathbf{a}$
\end_inset

 is in the direction of the line, namely some multiple
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
If you don't know why that's the direction of the line then prove it to
 yourself by computing 
\begin_inset Formula $\left(x_{2_{1}},x_{1_{1}}\right)-\left(x_{2_{0}},x_{1_{0}}\right)$
\end_inset

 for some particular 
\begin_inset Formula $x_{1_{0}},x_{1_{1}}$
\end_inset

.
\end_layout

\end_inset

 of 
\begin_inset Formula $\left(1,2/3\right)$
\end_inset

.
 So in searching for where 
\begin_inset Formula $\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}\cdot\left(\mathbf{x}-\mathbf{a}\right)=0$
\end_inset

 we just need to look at the projection of 
\begin_inset Formula $\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}$
\end_inset

 onto the line.
 The dotted arrows in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Constrained-gradient"

\end_inset

 are these projections.
 It's very obvious where 
\begin_inset Formula $\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}\cdot\left(\mathbf{x}-\mathbf{a}\right)=0$
\end_inset

 on the line: it's where 
\begin_inset Formula $\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}$
\end_inset

 is perpendicular (
\family default
\series default
\shape default
\size default
\emph on
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
orthogonal
\emph default
) to the line! It bears recapitulating: to identify where 
\begin_inset Formula $f$
\end_inset

 is minimized subject to the constraint we need to find a point 
\series bold
a
\series default
 where 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}$
\end_inset

 is perpendicular to the line 
\begin_inset Formula $x_{2}=(2/3)x_{1}-(2/3)$
\end_inset

.
 But this is easy.
 We can immediately write down
\begin_inset Foot
status open

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
The equation of the line perpendicular to 
\begin_inset Formula $y=mx+b$
\end_inset

 is 
\begin_inset Formula $y'=-(1/m)x+b$
\end_inset

.
\end_layout

\end_inset

 the direction vector of the perpendicular line 
\begin_inset Formula $\left(1,-3/2\right)$
\end_inset

 and find where 
\begin_inset Formula $\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}$
\end_inset

 points in the same direction
\begin_inset Foot
status open

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
For 
\begin_inset Formula $\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}$
\end_inset

 to point in the same direction means for it to be a multiple of the direction
 of the perpendicular line, just like, for example, 
\begin_inset Formula $\left(1,2\right)$
\end_inset

 points in the same direction as 
\begin_inset Formula $2\cdot\left(1,2\right)=\left(2,4\right)$
\end_inset

.
 Hence the 
\begin_inset Formula $\lambda$
\end_inset

 factor, which can be positive or negative.
\end_layout

\end_inset

 
\begin_inset Formula 
\begin{align*}
\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}} & =\lambda\begin{pmatrix}1\\
-\frac{3}{2}
\end{pmatrix}\\
\begin{pmatrix}-2+3a_{1}+a_{2}\\
8+2a_{1}+6a_{2}
\end{pmatrix} & =\lambda\begin{pmatrix}1\\
-\frac{3}{2}
\end{pmatrix}\\
\begin{pmatrix}3a_{1}+xa_{2}\\
2a_{1}+6a_{2}
\end{pmatrix} & =\begin{pmatrix}\lambda+2\\
-\lambda\frac{3}{2}-8
\end{pmatrix}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
We have what looks like 2 equations and 3 unknowns 
\begin_inset Formula $\left(a_{1},a_{2},\lambda\right)$
\end_inset

 but in fact we have a third equation: we have the constraint.
 Hence we need to solve
\begin_inset Formula 
\begin{align*}
\begin{pmatrix}3a_{1}+a_{2}\\
2a_{1}+6a_{2}\\
-\frac{2}{3}a_{1}+a_{2}
\end{pmatrix} & =\begin{pmatrix}\lambda+2\\
-\lambda\frac{3}{2}-8\\
-\frac{2}{3}
\end{pmatrix}
\end{align*}

\end_inset

This system has a solution at 
\begin_inset Formula $\left(a_{1},a_{2},\lambda\right)=\left(\frac{2}{25},-\frac{46}{75},-\frac{224}{75}\right)$
\end_inset

.
 Not the prettiest but if you check 
\begin_inset Formula $\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}\cdot\left(\mathbf{x}-\mathbf{a}\right)$
\end_inset

 for any point 
\family default
\series bold
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
x 
\series default
on the line you'll see that it's 0.

\series bold
 
\series default
I'll repeat for a third time what we've demonstrated:
\series bold
 
\series default
to identify where 
\begin_inset Formula $f$
\end_inset

 is minimized subject to the constraint we need to find a point 
\series bold
a
\series default
 that satisfies the constraint and where
\series bold
 
\begin_inset Formula $\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}$
\end_inset

 is also perpendicular to the constraint
\series default
.

\series bold
 
\end_layout

\begin_layout Standard
From now on I'm going to call the constraint 
\begin_inset Formula $g\left(\mathbf{x}\right)=c$
\end_inset

.
 If you prefer to think of it as 
\begin_inset Formula $g'\left(\mathbf{x}\right)=g\left(\mathbf{x}\right)-c=0$
\end_inset

 that's fine too.
 Note we can express the linear constraint in the previous example as 
\begin_inset Formula $g\left(\mathbf{x}\right)=-(2/3)x_{1}+x_{2}=-(2/3)$
\end_inset

.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename nonlinear_con.jpeg
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Nonlinear constraint
\begin_inset CommandInset label
LatexCommand label
name "fig:Nonlinear-constraint"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
This was all really easy because the constraint 
\begin_inset Formula $g\left(\mathbf{x}\right)$
\end_inset

 was linear.
 And not just linear but exactly a line! What if the constraint were a plane
 or some nonlinear function of its variables? In the case that 
\begin_inset Formula $g\left(\mathbf{x}\right)$
\end_inset

 is a plane then computing its normal vector is simple
\begin_inset Foot
status open

\begin_layout Plain Layout
If 
\begin_inset Formula $g\left(\mathbf{x}\right)=\sum k_{i}x_{i}=c$
\end_inset

 then 
\begin_inset Formula $\mathbf{k}=\left(k_{1},\dots,k_{n}\right)$
\end_inset

 is normal to the plane.
\end_layout

\end_inset

.
 But indeed what about a nonlinear constraint? A curve such as in figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Nonlinear-constraint"

\end_inset

? The story is exactly the same: we need to find where 
\begin_inset Formula $\nabla f$
\end_inset

 is orthogonal to 
\begin_inset Formula $g\left(\mathbf{x}\right)$
\end_inset

, like in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Orthogonal-to-nonlinear"

\end_inset

.
 Except now it's not as simple as finding the equation of the perpendicular
 line, or the normal vector.

\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 What shall we do? Linear approximation to the rescue! First compute the
 linear approximation to 
\begin_inset Formula $g\left(\mathbf{x}\right)$
\end_inset

 everywhere
\begin_inset Formula 
\[
g\left(\mathbf{x}\right)\approx g\left(\mathbf{a}\right)+\left.\nabla g\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}\cdot\left(\mathbf{x}-\mathbf{a}\right)
\]

\end_inset

Then observe we already know that for all 
\begin_inset Formula $\mathbf{x}$
\end_inset

 and 
\begin_inset Formula $\mathbf{a}$
\end_inset

 that satisfy the constraint 
\begin_inset Formula $g\left(\mathbf{x}\right)-g\left(\mathbf{a}\right)=c-c=0$
\end_inset

.
 This immediately implies that for all nearby 
\begin_inset Formula $\mathbf{x}$
\end_inset

 and 
\begin_inset Formula $\mathbf{a}$
\end_inset

 that satisfy the constraint 
\begin_inset Formula $\left.\nabla g\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}\cdot\left(\mathbf{x}-\mathbf{a}\right)=0$
\end_inset

 and this could only be the case if 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\left.\nabla g\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}$
\end_inset

 is orthogonal to any such vector
\begin_inset Foot
status open

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $\left.\nabla g\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}}$
\end_inset

 is orthogonal to any infinitesmal motion along the constraint!
\end_layout

\end_inset

 
\begin_inset Formula $\left(\mathbf{x}-\mathbf{a}\right)$
\end_inset

.
 
\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
So here we have exactly the tool we need to find where 
\begin_inset Formula $\nabla f$
\end_inset

 is orthogonal to 
\begin_inset Formula $g\left(\mathbf{x}\right)$
\end_inset

: find where it points in the same direction as 
\begin_inset Formula $\nabla g$
\end_inset

! That is to say just solve 
\begin_inset Formula 
\[
\nabla f\left(\mathbf{x}\right)=\lambda\nabla g\left(\mathbf{x}\right)
\]

\end_inset

The curve in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Nonlinear-constraint"

\end_inset

 is simply 
\begin_inset Formula $x_{2}=x_{1}^{3}$
\end_inset

 and therefore the constraint is 
\begin_inset Formula $g\left(\mathbf{x}\right)=-x_{1}^{3}+x_{2}=0$
\end_inset

 and then solving
\begin_inset Foot
status open

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
With some help from Mathematica :)
\end_layout

\end_inset

 
\begin_inset Formula 
\begin{align*}
\left.\nabla f\left(\mathbf{x}\right)\right|_{\mathbf{x}=\mathbf{a}} & =\lambda\begin{pmatrix}-3x_{1}^{2}\\
1
\end{pmatrix}\\
\begin{pmatrix}-2+3x_{1}+x_{2}\\
8+2x_{1}+6x_{2}\\
-x_{1}^{3}+x_{2}
\end{pmatrix} & =\lambda\begin{pmatrix}-3x_{1}^{2}\\
1\\
0
\end{pmatrix}
\end{align*}

\end_inset

yields the result 
\begin_inset Formula $\left(x_{1},x_{2}\right)=\left(-0.845793,-0.605051\right)$
\end_inset

.
 
\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Incidentally this works just fine for the linear case as well; for 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula $g\left(\mathbf{x}\right)=-(2/3)x_{1}+x_{2}=-(2/3)$
\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 we get that 
\begin_inset Formula $\nabla g=\left(-\frac{2}{3},1\right)=-\frac{3}{2}\left(1,-\frac{3}{2}\right)$
\end_inset

 and then solving
\begin_inset Formula 
\begin{align*}
\nabla f\left(\mathbf{x}\right) & =-1.5\lambda\begin{pmatrix}1\\
-\frac{3}{2}
\end{pmatrix}
\end{align*}

\end_inset

will produce the exact same answer as before with simply a different 
\begin_inset Formula $\lambda$
\end_inset

.
 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Graphics
	filename orth_nonlinear.jpeg
	scale 22

\end_inset


\begin_inset Caption

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Orthogonal to nonlinear constraint
\begin_inset CommandInset label
LatexCommand label
name "fig:Orthogonal-to-nonlinear"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
What happens if you have multiple simultaneous constraints? For example
 
\begin_inset Formula $m$
\end_inset

 simultaneous constraints 
\begin_inset Formula $g_{1}\left(\mathbf{x}\right),g_{2}\left(\mathbf{x}\right),\dots,g_{m}\left(\mathbf{x}\right)$
\end_inset

 for 
\begin_inset Formula $f$
\end_inset

 an 
\begin_inset Formula $n$
\end_inset

 variable function? For each constraint 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\nabla f\left(\mathbf{x}\right)=\lambda\nabla g\left(\mathbf{x}\right)$
\end_inset

 must hold and so you need to solve the system
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula 
\begin{align*}
\nabla f\left(\mathbf{x}\right) & =\lambda_{1}\nabla g_{1}\left(\mathbf{x}\right)\\
\nabla f\left(\mathbf{x}\right) & =\lambda_{2}\nabla g_{2}\left(\mathbf{x}\right)\\
 & \vdots\\
\nabla f\left(\mathbf{x}\right) & =\lambda_{m}\nabla g_{m}\left(\mathbf{x}\right)
\end{align*}

\end_inset

Again note that this looks like you have 
\begin_inset Formula $n+m$
\end_inset

 unknowns but only 
\begin_inset Formula $n$
\end_inset

 equations
\begin_inset Foot
status open

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Each 
\begin_inset Formula $\nabla f\left(\mathbf{x}\right)=\lambda_{i}\nabla g_{i}\left(\mathbf{x}\right)$
\end_inset

 is actually 
\begin_inset Formula $n$
\end_inset

 equations since 
\begin_inset Formula $\nabla$
\end_inset

 gives you an 
\begin_inset Formula $n$
\end_inset

 dimensional vector.
 
\end_layout

\end_inset

 but in fact you 
\begin_inset Formula $m$
\end_inset

 more in the 
\begin_inset Formula $m$
\end_inset

 constraints 
\begin_inset Formula 
\begin{align*}
g_{1}\left(\mathbf{x}\right) & =c_{1}\\
g_{2}\left(\mathbf{x}\right) & =c_{2}\\
 & \vdots\\
g_{m}\left(\mathbf{x}\right) & =c_{m}
\end{align*}

\end_inset


\end_layout

\begin_layout Section
Extensions
\end_layout

\begin_layout Subsection
Karush-Kuhn-Tucker Conditions
\end_layout

\begin_layout Standard
Everything I've set out here works for 
\emph on
constrained optimization
\emph default
 problems where the constraints are 
\emph on
equality constraints
\emph default
, i.e.
 
\begin_inset Formula $g_{i}\left(\mathbf{x}\right)=c$
\end_inset

 (actually from now on let's assume that all of our constraints are of the
 form 
\begin_inset Formula $g'\left(\mathbf{x}\right)=g\left(\mathbf{x}\right)-c=0$
\end_inset

).
 The extension to 
\emph on
inequality constraints 
\emph default
is simple but a richer theory.
 Therefore 4 possible optimization problems
\begin_inset Foot
status open

\begin_layout Plain Layout
As opposed the two possible with equality constraints; maximize 
\begin_inset Formula $f\left(\mathbf{x}\right)$
\end_inset

 subject to 
\begin_inset Formula $g\left(\mathbf{x}\right)=0$
\end_inset

 or minimize 
\begin_inset Formula $f\left(\mathbf{x}\right)$
\end_inset

 subject to 
\begin_inset Formula $g\left(\mathbf{x}\right)=0$
\end_inset

.
\end_layout

\end_inset

 with inequality constraints: 
\begin_inset Formula 
\begin{eqnarray}
\min_{\mathbf{x}}f\left(\mathbf{x}\right) & s.t & g\left(\mathbf{x}\right)\leq0\label{minlecon}\\
\min_{\mathbf{x}}f\left(\mathbf{x}\right) & s.t & g\left(\mathbf{x}\right)\geq0\label{mingecon}\\
\max_{\mathbf{x}}f\left(\mathbf{x}\right) & s.t & g\left(\mathbf{x}\right)\leq0\label{maxlecon}\\
\max_{\mathbf{x}}f\left(\mathbf{x}\right) & s.t & g\left(\mathbf{x}\right)\geq0\label{maxgecon}
\end{eqnarray}

\end_inset

I'll discuss 
\begin_inset CommandInset ref
LatexCommand ref
reference "maxlecon"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "maxgecon"

\end_inset

 and allude to how 
\begin_inset CommandInset ref
LatexCommand ref
reference "minlecon"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "mingecon"

\end_inset

 follow similarly.
 
\end_layout

\begin_layout Standard
Let's start with 
\begin_inset CommandInset ref
LatexCommand ref
reference "maxgecon"

\end_inset

.
 
\series bold
There are two cases here as well.

\series default
 In the 
\series bold
first case
\series default
 the 
\emph on
feasible region
\emph default
, the region where 
\begin_inset Formula $g\left(\mathbf{x}\right)\geq0$
\end_inset

, does not include the global maximum of 
\begin_inset Formula $f\left(\mathbf{x}\right)$
\end_inset

.

\emph on
 
\emph default
Here's an example to provide intuition:
\begin_inset Formula 
\begin{align*}
\max_{\mathbf{x}} & f\left(\mathbf{x}\right)=5-\left(\left(x_{1}-3\right)^{2}+x_{2}^{2}\right)\\
s.t & g\left(\mathbf{x}\right)=2-\left(x_{1}^{2}+x_{2}^{2}\right)\geq0
\end{align*}

\end_inset

This is a completely contrived example, contrived as such so that I could
 produce pretty pictures like 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Inequality-constraints-perspecti"

\end_inset

.
 
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename ineqconsperspective.png
	scale 25

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Inequality constraints perspective view.
 The light blue plane is the 
\begin_inset Formula $\left(x_{1},x_{2},x_{3}=0\right)$
\end_inset

 plane; the feasible region is where the orange paraboloid is above this
 plane.
\begin_inset CommandInset label
LatexCommand label
name "fig:Inequality-constraints-perspecti"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

Note that figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Clear-view-of-under"

\end_inset

 clearly shows where the feasible region is (the orange part).
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ineqsconreallygoodunder.png
	scale 25

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Clear view of the the feasible (orange) region.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Clear-view-of-under"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset

 
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename ineqgradients.png
	scale 25

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Contour plot with intersection and gradients at the local (in the feasible
 region) optimum.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Clear-gradients"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset

The relevant facts here are that 
\begin_inset Formula $f\left(\mathbf{x}\right)$
\end_inset

 has a global maximum at 
\begin_inset Formula $\left(3,0\right)$
\end_inset

 (no duh it's just a shifted paraboloid) and the domains of the 
\emph on
objective
\emph default
 
\begin_inset Formula $f\left(\mathbf{x}\right)$
\end_inset

 and the constraint intersect between 
\begin_inset Formula $x_{1}=3-\sqrt{5}$
\end_inset

 and 
\begin_inset Formula $x_{1}=\sqrt{2}$
\end_inset

.
 By inspection of 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Clear-view-of-under"

\end_inset

 it's clear that the constrained maximum is at 
\begin_inset Formula $\left(x_{1},x_{2}\right)=\left(\sqrt{2},0\right)$
\end_inset

.
 Note this is a point in the set where 
\begin_inset Formula $g\left(\mathbf{x}\right)=0$
\end_inset

.
 Since we've been discussing directions of gradients this entire time it
 should come as no surprise that here and now we'd be interested in what
 the gradients look like: figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Clear-gradients"

\end_inset

.
 Again this should be very obvious given the figures; 
\begin_inset Formula $f\left(\mathbf{x}\right)$
\end_inset

 increases in the positive 
\begin_inset Formula $x_{1}$
\end_inset

 direction and 
\begin_inset Formula $g\left(\mathbf{x}\right)$
\end_inset

 increases in the negative 
\begin_inset Formula $x_{1}$
\end_inset

 direction.
 
\series bold
In cases such as this, where the objective is maximized on the boundary
 of the constraint (on the set where 
\begin_inset Formula $g\left(\mathbf{x}\right)=0$
\end_inset

) and the constraint is 
\begin_inset Formula $g\left(\mathbf{x}\right)\geq0$
\end_inset

 the gradients 
\begin_inset Formula $\nabla g$
\end_inset

 and 
\begin_inset Formula $\nabla f$
\end_inset

 will always be anti-parallel.
 
\series default
That is to say it will necessarily be the case that 
\begin_inset Formula 
\begin{align*}
\nabla f\left(\mathbf{x}\right) & =-\lambda\nabla g\left(\mathbf{x}\right)\\
\lambda & \geq0
\end{align*}

\end_inset

The sign of 
\begin_inset Formula $\lambda$
\end_inset

 is significant here: for 
\series bold

\begin_inset Formula $\nabla g$
\end_inset

 
\series default
and
\series bold
 
\begin_inset Formula $\nabla f$
\end_inset

 
\series default
to be anti-parallel one must be some negative scaled version of the other
\begin_inset Foot
status open

\begin_layout Plain Layout
Equivalently we could have said that 
\begin_inset Formula $\nabla f\left(\mathbf{x}\right)=\lambda\nabla g\left(\mathbf{x}\right)$
\end_inset

 with 
\begin_inset Formula $\lambda\leq0$
\end_inset

.
\begin_inset CommandInset label
LatexCommand label
name "fn:Equivalently-we-could"

\end_inset


\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
In the 
\series bold
second case
\series default
 for the same conditions feasible region 
\series bold
does
\series default
 include the global maximum 
\begin_inset Formula $f\left(\mathbf{a}\right)$
\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
For example when both 
\begin_inset Formula $f$
\end_inset

 and 
\begin_inset Formula $g$
\end_inset

 are convex functions.
\end_layout

\end_inset

 of 
\begin_inset Formula $f\left(\mathbf{x}\right)$
\end_inset

.
 Then we simply have that 
\begin_inset Formula $\nabla f\left(\mathbf{x}\right)=0$
\end_inset

 at 
\series bold
a
\series default
.
 Note that despite the absence of 
\begin_inset Formula $\nabla g$
\end_inset

 in this condition we can artifically include it by stipulating that 
\begin_inset Formula 
\begin{align*}
\nabla f & =-\lambda\nabla g\\
 & \text{\textbf{AND}}\\
\lambda & =0
\end{align*}

\end_inset

since this is trivially equivalent by 
\begin_inset Formula $\nabla f=-\lambda\nabla g=-\left(0\right)\nabla g=0$
\end_inset

.
 Now look: in the first case for a constrained optimization problem of type
 
\begin_inset CommandInset ref
LatexCommand ref
reference "maxgecon"

\end_inset

 the solution is on the boundary of the feasible region, exactly where 
\begin_inset Formula $g\left(\mathbf{x}\right)=0$
\end_inset

 and so trivially 
\begin_inset Formula $\lambda g\left(\mathbf{x}\right)=0$
\end_inset

 there.
 But in the second case the solution is the global maximum and we've prescribed
 that 
\begin_inset Formula $\lambda=0$
\end_inset

 there and so again trivially 
\begin_inset Formula $\lambda g\left(\mathbf{x}\right)=0$
\end_inset

 there.
 Therefore the conditions 
\begin_inset Formula 
\begin{align*}
\nabla f\left(\mathbf{x}\right) & =-\lambda\nabla g\left(\mathbf{x}\right)\\
 & \text{\textbf{AND}}\\
\lambda g\left(\mathbf{x}\right) & =0\\
\lambda & \geq0
\end{align*}

\end_inset

are necessary
\begin_inset Foot
status open

\begin_layout Plain Layout
As opposed to sufficient.
 If you don't know the difference then 
\family typewriter
http://en.wikipedia.org/wiki/Necessity_and_sufficiency.
\end_layout

\end_inset

 conditions for 
\series bold
x
\series default
 to be where 
\begin_inset Formula $f$
\end_inset

 is maximized.
\end_layout

\begin_layout Standard
Okay on to 
\begin_inset CommandInset ref
LatexCommand ref
reference "maxlecon"

\end_inset

.
 We can manipulate the same example: just flip 
\begin_inset Formula $g\left(\mathbf{x}\right)$
\end_inset

 over! The feasible region is exactly the same.
 The only thing that changes is the direction of the gradient of 
\begin_inset Formula $g\left(\mathbf{x}\right)$
\end_inset

 on the set 
\begin_inset Formula $g\left(\mathbf{x}\right)=0$
\end_inset

: it now points to the right instead of the right! Therefore by reasoning
 as we did before for constrained optimization problems of type 
\begin_inset CommandInset ref
LatexCommand ref
reference "maxgecon"

\end_inset

 we can quickly conclude that the necessary conditions for this type in
 the first case (if the global maximum is not in the feasible region) are
\begin_inset Formula 
\begin{align*}
\nabla f\left(\mathbf{x}\right) & =\lambda\nabla g\left(\mathbf{x}\right)\\
\lambda & \geq0
\end{align*}

\end_inset

since the gradients should point in the same direction, as indicated by
 figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:revgradients"

\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
Literally the only thing I did was flip the orange arrow :)
\end_layout

\end_inset

.
 
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename revgradientsminmax.png
	scale 25

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Contour plot with the local (in the feasible region) maximum for 
\begin_inset Formula $g\left(\mathbf{x}\right)\leq0$
\end_inset

 constraint.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:revgradients"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset

For reasons that will become clear in about 2 pages it's more convenient
 to express the necessary conditions as 
\begin_inset Formula 
\begin{align*}
\nabla f\left(\mathbf{x}\right) & =-\lambda\nabla g\left(\mathbf{x}\right)\\
\lambda & \leq0
\end{align*}

\end_inset

If you don't understand why this is equivalent go back and look at footnote
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fn:Equivalently-we-could"

\end_inset

.
 In the second case (if the global maximum is in the feasible region) then
 it's the same thing
\begin_inset Formula 
\begin{align*}
\nabla f & =-\lambda\nabla g\\
 & \text{\textbf{AND}}\\
\lambda & =0
\end{align*}

\end_inset

Then as before summarizing both cases the necessary conditions are
\begin_inset Formula 
\begin{align*}
\nabla f\left(\mathbf{x}\right) & =-\lambda\nabla g\left(\mathbf{x}\right)\\
 & \text{\textbf{AND}}\\
\lambda g\left(\mathbf{x}\right) & =0\\
\lambda & \leq0
\end{align*}

\end_inset

Note 
\begin_inset Formula $\lambda\leq0$
\end_inset

.
\end_layout

\begin_layout Standard
Okay that's it for constraining maximization problems.
 How to handle constrained minimization problems? Just flip the pictures!
 If you invert the blue paraboloid, which corresponds to constrained optimizatio
n problems of type 
\begin_inset CommandInset ref
LatexCommand ref
reference "mingecon"

\end_inset

, in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Inequality-constraints-perspecti"

\end_inset

 you get figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Minimizing-the-objective"

\end_inset

 with contour plot like in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:localmin"

\end_inset

.
 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename revgradientsminmin.png
	scale 25

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Contour plot with the local (in the feasible region) minimum for constraint
 
\begin_inset Formula $g\left(\mathbf{x}\right)\geq0$
\end_inset

.
\begin_inset CommandInset label
LatexCommand label
name "fig:localmin"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

 
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename invertpersp.png
	scale 30

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Minimizing the objective subject to the constraint 
\begin_inset Formula $g\left(\mathbf{x}\right)\geq0$
\end_inset

.
\begin_inset CommandInset label
LatexCommand label
name "fig:Minimizing-the-objective"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset

For the case where the global minimum is not in the feasible region of the
 constraint, and the local minimum occurs on the boundary, we want to consider
 which direction the negative gradient 
\begin_inset Formula $-\nabla f$
\end_inset

 points.
 In fact we want the negative 
\begin_inset Formula $-\nabla f$
\end_inset

 to point in the opposite direction of 
\begin_inset Formula $\nabla g$
\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
Go back and read the discussion around figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Constrained-gradient"

\end_inset

 if you don't understand why they should point in opposite directions.
\end_layout

\end_inset

.
 So the necessary conditions are 
\begin_inset Formula 
\begin{align*}
-\nabla f\left(\mathbf{x}\right) & =-\lambda\nabla g\left(\mathbf{x}\right)\\
\lambda & \geq0
\end{align*}

\end_inset

which is of course equivalent to
\begin_inset Formula 
\begin{align*}
\nabla f\left(\mathbf{x}\right) & =\lambda\nabla g\left(\mathbf{x}\right)\\
\lambda & \geq0
\end{align*}

\end_inset

which again for reasons that will become clear in about 2 pages I'll rewrite
 as 
\begin_inset Formula 
\begin{align*}
\nabla f\left(\mathbf{x}\right) & =-\lambda\nabla g\left(\mathbf{x}\right)\\
\lambda & \leq0
\end{align*}

\end_inset

And for the case where the global minimum is in the feasible region of the
 constraint it's again 
\begin_inset Formula 
\begin{align*}
\nabla f & =-\lambda\nabla g\\
 & \text{\textbf{AND}}\\
\lambda & =0
\end{align*}

\end_inset

For both of these cases the conditons on 
\series bold
x 
\series default
are likewise summarized by 
\begin_inset Formula 
\begin{align*}
\nabla f\left(\mathbf{x}\right) & =-\lambda\nabla g\left(\mathbf{x}\right)\\
\lambda g\left(\mathbf{x}\right) & =0\\
\lambda & \leq0
\end{align*}

\end_inset

Finally without doing any work
\begin_inset Foot
status open

\begin_layout Plain Layout
Do it yourself!
\end_layout

\end_inset

, just by analogy constrained optimization problems of type 
\begin_inset CommandInset ref
LatexCommand ref
reference "minlecon"

\end_inset

 have necessary conditions on 
\series bold
x 
\series default

\begin_inset Formula 
\begin{align*}
\nabla f\left(\mathbf{x}\right) & =-\lambda\nabla g\left(\mathbf{x}\right)\\
\lambda g\left(\mathbf{x}\right) & =0\\
\lambda & \geq0
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
In general this set of necessary conditions on the stationary point 
\series bold
x 
\series default
are called the Karush-Kuhn-Tucker (KKT) conditions.
 Note that for multiple constrains we simply have multiple 
\begin_inset Formula $\lambda_{i}$
\end_inset

 and 
\begin_inset Formula $g_{i}$
\end_inset

 the generalizations follow from the discussion on generalizations at the
 end of section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Practice"

\end_inset

.
 Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Karush-Kuhn-Tucker-conditions"

\end_inset

 summarizes the KKT conditions in their general form.
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Formula 
\begin{align*}
\text{to}\min_{\mathbf{x}}f\left(\mathbf{x}\right) & s.t\, g_{i}\left(\mathbf{x}\right)\leq0\text{ for }i=1,2,\dots,m\\
\mathbf{x},\lambda_{i} & \,\text{must satisfy}\\
\nabla f\left(\mathbf{x}\right) & =-\lambda_{i}\nabla g\left(\mathbf{x}\right)\\
\lambda_{i}g_{i}\left(\mathbf{x}\right) & =0\\
\lambda_{i} & \geq0
\end{align*}

\end_inset


\begin_inset Formula 
\begin{align*}
\text{to}\min_{\mathbf{x}}f\left(\mathbf{x}\right) & s.t\, g_{i}\left(\mathbf{x}\right)\geq0\text{ for }i=1,2,\dots,m\\
\mathbf{x},\lambda_{i} & \,\text{must satisfy}\\
\nabla f\left(\mathbf{x}\right) & =-\lambda_{i}\nabla g\left(\mathbf{x}\right)\\
\lambda_{i}g_{i}\left(\mathbf{x}\right) & =0\\
\lambda_{i} & \leq0
\end{align*}

\end_inset


\end_layout

\end_inset


\begin_inset Formula $\:\;\;\;$
\end_inset


\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Formula 
\begin{align*}
\text{to}\max_{\mathbf{x}}f\left(\mathbf{x}\right) & s.t\, g_{i}\left(\mathbf{x}\right)\geq0\text{ for }i=1,2,\dots,m\\
\mathbf{x},\lambda_{i} & \,\text{must satisfy}\\
\nabla f\left(\mathbf{x}\right) & =-\lambda_{i}\nabla g\left(\mathbf{x}\right)\\
\lambda_{i}g_{i}\left(\mathbf{x}\right) & =0\\
\lambda_{i} & \geq0
\end{align*}

\end_inset


\begin_inset Formula 
\begin{align*}
\text{to}\max_{\mathbf{x}}f\left(\mathbf{x}\right) & s.t\, g_{i}\left(\mathbf{x}\right)\leq0\text{ for }i=1,2,\dots,m\\
\mathbf{x},\lambda_{i} & \,\text{must satisfy}\\
\nabla f\left(\mathbf{x}\right) & =-\lambda_{i}\nabla g\left(\mathbf{x}\right)\\
\lambda_{i}g_{i}\left(\mathbf{x}\right) & =0\\
\lambda_{i} & \leq0
\end{align*}

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Karush-Kuhn-Tucker conditions
\begin_inset CommandInset label
LatexCommand label
name "tab:Karush-Kuhn-Tucker-conditions"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
The Lagrangian 
\end_layout

\begin_layout Standard
There's a very cutesy mathematician-esque way to restate the KKT conditions.
 Define the 
\emph on
Lagrangian 
\emph default
as
\begin_inset Formula 
\[
L\left(\mathbf{x},\boldsymbol{\lambda}\right)=f\left(\mathbf{x}\right)+\sum_{i=1}^{m}\lambda_{i}g_{i}\left(\mathbf{x}\right)
\]

\end_inset

where 
\begin_inset Formula $\boldsymbol{\lambda}=\left(\lambda_{1},\dots,\lambda_{m}\right)$
\end_inset

.
 Then for the KKT conditions now involve solving
\begin_inset Formula 
\begin{align*}
\nabla_{\mathbf{x}}L\left(\mathbf{x},\boldsymbol{\lambda}\right) & =0
\end{align*}

\end_inset

For example for constrained optimization problems of type 
\begin_inset CommandInset ref
LatexCommand ref
reference "minlecon"

\end_inset

 the restated conditions are 
\begin_inset Formula 
\begin{align*}
\min_{\mathbf{x}}f\left(\mathbf{x}\right) & s.t\, g_{i}\left(\mathbf{x}\right)\leq0\text{ for }i=1,2,\dots,m\\
\mathbf{x},\lambda_{i} & \,\text{must satisfy}\\
\nabla_{\mathbf{x}}L\left(\mathbf{x},\boldsymbol{\lambda}\right) & =0\\
\boldsymbol{\lambda}\cdot\mathbf{g} & =0\\
\lambda_{i} & \geq0\text{ for }i=1,2,\dots,m
\end{align*}

\end_inset

where 
\begin_inset Formula $\mathbf{g}=\left(g_{1}\left(\mathbf{x}\right),\dots,g_{m}\left(\mathbf{x}\right)\right)$
\end_inset

 and 
\begin_inset Formula $\nabla_{\mathbf{x}}L\left(\mathbf{x},\boldsymbol{\lambda}\right)=\left(\frac{\partial L\left(\mathbf{x},\boldsymbol{\lambda}\right)}{\partial x_{1}},\frac{\partial L\left(\mathbf{x},\boldsymbol{\lambda}\right)}{\partial x_{2}},\dots,\frac{\partial L\left(\mathbf{x},\boldsymbol{\lambda}\right)}{\partial x_{n}}\right)$
\end_inset

.
 Why is this equivalent? Well the KKT conditions as I've written them down
 in 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Karush-Kuhn-Tucker-conditions"

\end_inset

 would be
\begin_inset Formula 
\begin{align*}
\nabla f\left(\mathbf{x}\right) & =-\lambda_{1}\nabla g_{1}\left(\mathbf{x}\right)\\
\nabla f\left(\mathbf{x}\right) & =-\lambda_{2}\nabla g_{2}\left(\mathbf{x}\right)\\
 & \vdots\\
\nabla f\left(\mathbf{x}\right) & =-\lambda_{m}\nabla g_{m}\left(\mathbf{x}\right)\\
\lambda_{1}g_{1}\left(\mathbf{x}\right) & =0\\
\lambda_{2}g_{2}\left(\mathbf{x}\right) & =0\\
 & \vdots\\
\lambda_{m}g_{m}\left(\mathbf{x}\right) & =0\\
\lambda_{1} & \geq0\\
\lambda_{2} & \geq0\\
 & \vdots\\
\lambda_{m} & \geq0
\end{align*}

\end_inset

First of all obviously the 
\begin_inset Formula $\lambda_{i}\geq0$
\end_inset

 conditions match in both statements of the conditions so they're equivalent
 in that respect.
 Adding all the 
\begin_inset Formula $\nabla f\left(\mathbf{x}\right)=-\lambda_{i}\nabla g_{i}\left(\mathbf{x}\right)$
\end_inset

 equations we get 
\begin_inset Formula $m\nabla f\left(\mathbf{x}\right)=-\sum_{i=1}^{m}\lambda_{i}\nabla g_{i}\left(\mathbf{x}\right)$
\end_inset

.
 Dividing through by 
\begin_inset Formula $m$
\end_inset

 and defining 
\begin_inset Formula $\lambda_{i}^{'}$
\end_inset

 we get that 
\begin_inset Formula $\nabla f\left(\mathbf{x}\right)=-\sum_{i=1}^{m}\lambda_{i}^{'}\nabla g_{i}\left(\mathbf{x}\right)$
\end_inset

 which is of course equivalent to 
\begin_inset Formula $\nabla_{\mathbf{x}}L=0$
\end_inset

 since absorbing the 
\begin_inset Formula $1/m$
\end_inset

 in the 
\begin_inset Formula $\lambda_{i}^{'}$
\end_inset

 doesn't matter
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
All we've cared about this entire time is whether 
\begin_inset Formula $\nabla f$
\end_inset

 and 
\begin_inset Formula $\nabla g$
\end_inset

 are parallel; they're relative lengths aren't important.
\end_layout

\end_inset

.
 Now
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 for the 
\begin_inset Formula $\lambda_{i}g_{i}\left(\mathbf{x}\right)=0$
\end_inset

 equations in the original KKT conditions: since in the restated conditions
 
\begin_inset Formula $\lambda_{i}\geq0$
\end_inset

 the only way 
\begin_inset Formula $\boldsymbol{\lambda}\cdot\mathbf{g}$
\end_inset

 could equal zero is if every 
\begin_inset Formula $\lambda_{i}g_{i}\left(\mathbf{x}\right)$
\end_inset

 equals zero.
 Voila the conditions are equivalent in which 
\family default
\series bold
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
x 
\series default
they identify as the points that satisfy
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\begin_inset Formula $\min_{\mathbf{x}}f\left(\mathbf{x}\right)s.t\, g_{i}\left(\mathbf{x}\right)\leq0\text{ for }i=1,2,\dots,m$
\end_inset

.
 All of the other KKT version are equivalent for similar reasons.
 The KKT conditions using the Lagrangian form are restated in table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:KKT-lagrange"

\end_inset

.
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Box Boxed
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Formula 
\begin{align*}
\text{to}\min_{\mathbf{x}}f\left(\mathbf{x}\right) & s.t\, g_{i}\left(\mathbf{x}\right)\leq0\text{ for }i=1,2,\dots,m\\
\mathbf{x},\lambda_{i} & \,\text{must satisfy}\\
\nabla_{\mathbf{x}}L\left(\mathbf{x},\boldsymbol{\lambda}\right) & =0\\
\boldsymbol{\lambda}\cdot\mathbf{g} & =0\\
\lambda_{i} & \geq0
\end{align*}

\end_inset


\begin_inset Formula 
\begin{align*}
\text{to}\min_{\mathbf{x}}f\left(\mathbf{x}\right) & s.t\, g_{i}\left(\mathbf{x}\right)\geq0\text{ for }i=1,2,\dots,m\\
\mathbf{x},\lambda_{i} & \,\text{must satisfy}\\
\nabla_{\mathbf{x}}L\left(\mathbf{x},\boldsymbol{\lambda}\right) & =0\\
\boldsymbol{\lambda}\cdot\mathbf{g} & =0\\
\lambda_{i} & \leq0
\end{align*}

\end_inset


\end_layout

\end_inset


\begin_inset Formula $\:\;\;\;$
\end_inset


\begin_inset Box Boxed
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "40col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Formula 
\begin{align*}
\text{to}\max_{\mathbf{x}}f\left(\mathbf{x}\right) & s.t\, g\left(\mathbf{x}\right)\geq0\text{ for }i=1,2,\dots,m\\
\mathbf{x},\lambda_{i} & \,\text{must satisfy}\\
\nabla_{\mathbf{x}}L\left(\mathbf{x},\boldsymbol{\lambda}\right) & =0\\
\boldsymbol{\lambda}\cdot\mathbf{g} & =0\\
\lambda_{i} & \geq0
\end{align*}

\end_inset


\begin_inset Formula 
\begin{align*}
\text{to}\max_{\mathbf{x}}f\left(\mathbf{x}\right) & s.t\, g\left(\mathbf{x}\right)\leq0\text{ for }i=1,2,\dots,m\\
\mathbf{x},\lambda_{i} & \,\text{must satisfy}\\
\nabla_{\mathbf{x}}L\left(\mathbf{x},\boldsymbol{\lambda}\right) & =0\\
\boldsymbol{\lambda}\cdot\mathbf{g} & =0\\
\lambda_{i} & \leq0
\end{align*}

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Lagrange form Karush-Kuhn-Tucker conditions
\begin_inset CommandInset label
LatexCommand label
name "tab:KKT-lagrange"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Duality
\end_layout

\begin_layout Standard
Under certain conditions it's possible to express a constrained optimization
 problem as another optimization problem that is in some sense equal and
 opposite
\begin_inset Foot
status open

\begin_layout Plain Layout
This should be called Newton's third law of optimization or something :)
\end_layout

\end_inset

.
 For example if the optimization problem you're interested in is a minimization
 problem then there exists (under certain conditions) a maximization problem
 whose solution is also the solution to minimization problem.
 This reformulation is called the 
\emph on
dual 
\emph default
problem
\begin_inset Foot
status open

\begin_layout Plain Layout
Dual because it reveals a dual nature to the original problem.
\end_layout

\end_inset

 (and the original is called the 
\emph on
primal
\emph default
 problem).
 
\series bold
Warning:
\series default
 this is probably the most difficult part of this note (i.e.
 there will be some short lemmas and theorems).
 If you're not interested then I'll just tell you the punchline right now
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Okay on to the math.
 The reformulation is dependent on which type of optimization problem our
 primal problem is so let's fix a particular one and then at the end I'll
 say what needs to be adjusted to reformulate the other types.
 So let's take again the concrete example of the constrained minimization
 problem of type 
\begin_inset CommandInset ref
LatexCommand ref
reference "minlecon"

\end_inset

 
\begin_inset Formula 
\begin{align*}
\min_{\mathbf{x}}f\left(\mathbf{x}\right) & s.t\,\mathbf{g}\left(\mathbf{x}\right)\leq\mathbf{0}
\end{align*}

\end_inset

To express the dual problem first we need to express the original constrained
 optimization as an unconstrained one.
 For this we need a fact so 
\end_layout

\begin_layout Fact*
For any 
\begin_inset Formula $\mathbf{g}\in\mathbb{R}^{m}$
\end_inset


\begin_inset Formula 
\[
\max_{\boldsymbol{\lambda}\geq\mathbf{0}}\boldsymbol{\lambda}\cdot\mathbf{g}=\begin{cases}
0 & \text{if }\mathbf{g}\leq\mathbf{0}\\
\infty & \text{otherwise}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
This looks more mysterious than it is.
 All it's saying is that if all of the components of a vector 
\series bold
g 
\series default
are negative, then the largest number you can construct using only positive
 linear combinations (that's the 
\begin_inset Formula $\boldsymbol{\lambda}\geq\mathbf{0}$
\end_inset

 part) of those components is 0, but if even a single component of 
\series bold
g 
\series default
is positive we can just scale that component to infinity in order to make
 
\begin_inset Formula $\boldsymbol{\lambda}\cdot\mathbf{g}$
\end_inset

 equal to infinity.
 
\end_layout

\begin_layout Standard
Remember that to solve our constrained minimization we're going to constrain
 the lagrange multiplers to 
\begin_inset Formula $\boldsymbol{\lambda}\geq\mathbf{0}$
\end_inset

.
 Hence we can use this fact to make a function that acts as a 
\begin_inset Quotes eld
\end_inset

barrier
\begin_inset Quotes erd
\end_inset

 for our minimization 
\begin_inset Formula 
\[
M\left(\mathbf{x}\right)=\max_{\boldsymbol{\lambda}\geq\mathbf{0}}\boldsymbol{\lambda}\cdot\mathbf{g}\left(\mathbf{x}\right)=\begin{cases}
0 & \text{if }\mathbf{g}\left(\mathbf{x}\right)\leq\mathbf{0}\\
\infty & \text{otherwise}
\end{cases}
\]

\end_inset

This function goes to infinity very quickly if we leave the feasible region,
 i.e.
 where 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\mathbf{g}\left(\mathbf{x}\right)\leq\mathbf{0}$
\end_inset

.

\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 Therefore minimizing 
\begin_inset Formula $f$
\end_inset

 over the feasible region is the same thing as minimizing 
\begin_inset Formula $f+M$
\end_inset

 everywhere
\begin_inset Foot
status open

\begin_layout Plain Layout
The function 
\begin_inset Formula $M$
\end_inset

 will prevent us from leaving the feasible region by driving the sum to
 infinity outside it, the feasible region.
\end_layout

\end_inset

.
 So the unconstrained version of our constrained minimization problem is
 
\begin_inset Formula 
\[
\min_{\mathbf{x}}\left(f\left(\mathbf{x}\right)+M\left(\mathbf{x}\right)\right)=\min_{\mathbf{x}}\left(f\left(\mathbf{x}\right)+\max_{\boldsymbol{\lambda}\geq\mathbf{0}}\boldsymbol{\lambda}\cdot\mathbf{g}\left(\mathbf{x}\right)\right)
\]

\end_inset

but 
\begin_inset Formula $f$
\end_inset

 is not a function of 
\begin_inset Formula $\boldsymbol{\lambda}$
\end_inset

 so this is the same as 
\begin_inset Formula 
\[
\min_{\mathbf{x}}\left(f\left(\mathbf{x}\right)+\max_{\boldsymbol{\lambda}\geq\mathbf{0}}\boldsymbol{\lambda}\cdot\mathbf{g}\left(\mathbf{x}\right)\right)=\min_{\mathbf{x}}\max_{\boldsymbol{\lambda}\geq\mathbf{0}}\left(f\left(\mathbf{x}\right)+\boldsymbol{\lambda}\cdot\mathbf{g}\left(\mathbf{x}\right)\right)=\min_{\mathbf{x}}\max_{\boldsymbol{\lambda}\geq\mathbf{0}}L\left(\mathbf{x},\boldsymbol{\lambda}\right)
\]

\end_inset

Well isn't that interesting :) The constrained minimization can be expressed
 as an unconstrained minimization of a function of the Lagrangian.
 
\series bold
This is not the dual problem yet!
\series default
 But we're getting there.
 We need some more stuff.
 
\end_layout

\begin_layout Lemma
For any real valued function 
\begin_inset Formula $h\left(x_{1},x_{2}\right)$
\end_inset


\begin_inset CommandInset label
LatexCommand label
name "lem:weak"

\end_inset

 
\begin_inset Formula 
\[
\max_{x_{2}}\min_{x_{1}}h\left(x_{1},x_{2}\right)\leq\min_{x_{1}}\max_{x_{2}}h\left(x_{1},x_{2}\right)
\]

\end_inset


\end_layout

\begin_layout Proof
Clearly for all 
\series bold

\begin_inset Formula $x_{2}$
\end_inset


\series default
 
\begin_inset Formula $\min_{x_{1}}\left(x_{1},x_{2}\right)\leq\left(x_{1},x_{2}\right)$
\end_inset

 for all
\begin_inset Foot
status open

\begin_layout Plain Layout
The left side is only a function of 
\series bold

\begin_inset Formula $x_{2}$
\end_inset

 
\series default
and the right side is a function of both 
\series bold

\begin_inset Formula $x_{1}$
\end_inset

 
\series default
and 
\begin_inset Formula $x_{2}$
\end_inset

.
\end_layout

\end_inset

 
\series bold

\begin_inset Formula $x_{1}$
\end_inset

 
\series default
and 
\series bold

\begin_inset Formula $x_{2}$
\end_inset


\series default
 .
 Then taking the max wrt 
\series bold

\begin_inset Formula $x_{2}$
\end_inset

 
\series default
of both sides preserves the inequality so
\begin_inset Formula $\max_{x_{2}}\min_{x_{1}}h\left(x_{1},x_{2}\right)\leq\max_{x_{2}}h\left(x_{1},x_{2}\right)$
\end_inset

 for all 
\begin_inset Formula $x_{1}$
\end_inset

.
 Finally taking the min wrt 
\series bold

\begin_inset Formula $x_{1}$
\end_inset

 
\series default
of both sides doesn't change the left side
\begin_inset Foot
status open

\begin_layout Plain Layout
The left side is just a number and the right side is only a function of
 
\size normal

\begin_inset Formula $x_{1}$
\end_inset

.
\end_layout

\end_inset

 and so 
\begin_inset Formula 
\[
\max_{x_{2}}\min_{x_{1}}h\left(x_{1},x_{2}\right)\leq\min_{x_{1}}\max_{x_{2}}h\left(x_{1},x_{2}\right)
\]

\end_inset

This is called the 
\emph on
minimax
\emph default
 inequality or 
\emph on
weak duality
\emph default
.
\end_layout

\begin_layout Standard
Of course this generalize to 
\begin_inset Formula $h\left(x_{1},\dots,x_{n}\right)$
\end_inset

.
 I'll repeat: lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:weak"

\end_inset

 holds for any function 
\begin_inset Formula $h$
\end_inset

.
 Immediately this implies that if 
\begin_inset Formula $\mathbf{p}^{*}$
\end_inset

 is the solution
\begin_inset Foot
status open

\begin_layout Plain Layout

\series bold
p
\series default
 for primal.
\end_layout

\end_inset

 to the unconstrained minimization, i.e.
 
\begin_inset Formula $\mathbf{p}^{*}=\min_{\mathbf{x}}\max_{\boldsymbol{\lambda}\geq\mathbf{0}}L\left(\mathbf{x},\boldsymbol{\lambda}\right)$
\end_inset

 then
\begin_inset Formula 
\[
\mathbf{p}^{*}\geq\max_{\boldsymbol{\lambda}\geq\mathbf{0}}\min_{\mathbf{x}}L\left(\mathbf{x},\boldsymbol{\lambda}\right)
\]

\end_inset

Define 
\begin_inset Formula $D\left(\mathbf{\boldsymbol{\lambda}}\right)=\min_{\mathbf{x}}L\left(\mathbf{x},\boldsymbol{\lambda}\right)$
\end_inset

 and we have that 
\begin_inset Formula 
\[
\mathbf{p}^{*}\geq\mathbf{d}^{*}=\max_{\boldsymbol{\lambda}\geq\mathbf{0}}D\left(\mathbf{\boldsymbol{\lambda}}\right)
\]

\end_inset

This 
\begin_inset Formula $D$
\end_inset

 is the dual to the Lagrangian and this shows that the solution to this
 constrained maximization problem
\begin_inset Formula 
\begin{align*}
\max_{\boldsymbol{\lambda}}D\left(\boldsymbol{\lambda}\right)\, & s.t\,\boldsymbol{\lambda}\geq\mathbf{0}
\end{align*}

\end_inset

is a lower bound for the solution to our original constrained minimization
 
\begin_inset Formula $\min_{\mathbf{x}}f\left(\mathbf{x}\right)\, s.t\,\mathbf{g}\left(\mathbf{x}\right)\leq\mathbf{0}$
\end_inset

.
 
\end_layout

\begin_layout Standard

\series bold
This is still not the dual problem
\series default
 since solving it doesn't give you a solution to your original problem,
 only a lower bound, but anyway you can imagine it's still useful for convergenc
e checks and things like that.
 What would have to be true for the solution to this problem to be equal
 to the solution to the original problem, i.e.
\begin_inset Formula 
\[
\mathbf{p}^{*}=\mathbf{d}^{*}=\max_{\boldsymbol{\lambda}\geq\mathbf{0}}D\left(\mathbf{\boldsymbol{\lambda}}\right)
\]

\end_inset

Well since the weak duality inequality is how we arrived at the lower bound
 the weak duality inequality but be an equality, i.e.
 
\begin_inset Formula 
\[
\max_{x_{2}}\min_{x_{1}}h\left(x_{1},x_{2}\right)=\min_{x_{1}}\max_{x_{2}}h\left(x_{1},x_{2}\right)
\]

\end_inset

So when does this equality hold for the minimax inequality? The condition
 is that 
\begin_inset Formula $h$
\end_inset

 should have a 
\emph on
saddle point
\emph default
, i.e.
 there should exist 
\begin_inset Formula $\left(x_{1}^{*},x_{2}^{*}\right)$
\end_inset

 such that 
\begin_inset Formula 
\[
h\left(x_{1}^{*},x_{2}\right)\leq h\left(x_{1}^{*},x_{2}^{*}\right)\leq h\left(x_{1},x_{2}^{*}\right)
\]

\end_inset

It's called a saddle point because if you start at 
\begin_inset Formula $\left(x_{1}^{*},x_{2}^{*}\right)$
\end_inset

 and you vary 
\series bold

\begin_inset Formula $x_{1}$
\end_inset

 
\series default
while holding 
\series bold

\begin_inset Formula $x_{2}$
\end_inset

 
\series default
fixed to be 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $x_{2}^{*}$
\end_inset

 the value of 
\begin_inset Formula $h$
\end_inset

 increases and if you vary 
\family default
\series bold
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula $x_{2}$
\end_inset

 
\series default
while holding 
\series bold

\begin_inset Formula $x_{1}$
\end_inset

 
\series default
fixed to be 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $x_{1}^{*}$
\end_inset

 the value of 
\begin_inset Formula $h$
\end_inset

 decreases.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Saddle"

\end_inset

 is an example where the point 
\begin_inset Formula $\left(0,0\right)$
\end_inset

 is a saddle point.
 Why is it that if 
\begin_inset Formula $h$
\end_inset

 has a saddle point 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula $\max_{x_{2}}\min_{x_{1}}h\left(x_{1},x_{2}\right)=\min_{x_{1}}\max_{x_{2}}h\left(x_{1},x_{2}\right)$
\end_inset

 ? Here's a quick proof
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Graphics
	filename saddle.png
	scale 70

\end_inset


\begin_inset Caption

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
Saddle
\begin_inset CommandInset label
LatexCommand label
name "fig:Saddle"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Lemma
For a function 
\begin_inset Formula $h\left(x_{1},x_{2}\right)$
\end_inset

, if there exists a unique point 
\begin_inset Formula $\left(x_{1}^{*},x_{2}^{*}\right)$
\end_inset

 such that 
\begin_inset Formula 
\[
h\left(x_{1}^{*},x_{2}\right)\leq h\left(x_{1}^{*},x_{2}^{*}\right)\leq h\left(x_{1},x_{2}^{*}\right)
\]

\end_inset

then 
\begin_inset Formula 
\[
\max_{x_{2}}\min_{x_{1}}h\left(x_{1},x_{2}\right)=\min_{x_{1}}\max_{x_{2}}h\left(x_{1},x_{2}\right)
\]

\end_inset


\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $\left(x_{1}^{*},x_{2}^{*}\right)$
\end_inset

 be such a point.
 Then maximizing 
\begin_inset Formula $x_{2}$
\end_inset

 along 
\begin_inset Formula $x_{1}^{*}$
\end_inset

 is the best place to do it, or alternatively 
\begin_inset Formula $h$
\end_inset

 is along any 
\begin_inset Formula $x_{2}$
\end_inset

 is maximal at 
\begin_inset Formula $x_{1}^{*}$
\end_inset

, i.e.
\begin_inset Formula 
\[
\max_{x_{2}}h\left(x_{1},x_{2}\right)\leq\max_{x_{2}}h\left(x_{1}^{*},x_{2}\right)
\]

\end_inset

and since the right side isn't a function of 
\begin_inset Formula $x_{1}$
\end_inset

 anymore 
\begin_inset Formula 
\begin{align*}
\min_{x_{1}}\max_{x_{2}}h\left(x_{1},x_{2}\right) & \leq\max_{x_{2}}h\left(x_{1}^{*},x_{2}\right)\\
 & =h\left(x_{1}^{*},x_{2}^{*}\right)\\
 & =\min_{x_{1}}h\left(x_{1},x_{2}^{*}\right)\\
 & \leq\max_{x_{2}}\min_{x_{1}}h\left(x_{1},x_{2}\right)
\end{align*}

\end_inset

and by lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:weak"

\end_inset

 
\begin_inset Formula 
\[
\max_{x_{2}}\min_{x_{1}}h\left(x_{1},x_{2}\right)\leq\min_{x_{1}}\max_{x_{2}}h\left(x_{1},x_{2}\right)
\]

\end_inset

so 
\begin_inset Formula 
\[
\min_{x_{1}}\max_{x_{2}}h\left(x_{1},x_{2}\right)\leq\max_{x_{2}}\min_{x_{1}}h\left(x_{1},x_{2}\right)\leq\min_{x_{1}}\max_{x_{2}}h\left(x_{1},x_{2}\right)
\]

\end_inset

and thus
\begin_inset Formula 
\[
\max_{x_{2}}\min_{x_{1}}h\left(x_{1},x_{2}\right)=\min_{x_{1}}\max_{x_{2}}h\left(x_{1},x_{2}\right)
\]

\end_inset

This is called 
\emph on
strong duality
\emph default
.
\end_layout

\begin_layout Standard
So when does a function 
\begin_inset Formula $h\left(x_{1},\dots,x_{n}\right)$
\end_inset

 have a saddle point? When its Hessian
\begin_inset Formula 
\[
H_{h}\left(x_{1},\dots,x_{n}\right)=\begin{pmatrix}\frac{\partial^{2}}{\partial x_{1}\partial x_{1}}h\left(x_{1},\dots,x_{n}\right) & \cdots & \frac{\partial^{2}}{\partial x_{1}\partial x_{n}}h\left(x_{1},\dots,x_{n}\right)\\
\vdots & \ddots & \vdots\\
\frac{\partial^{2}}{\partial x_{n}\partial x_{1}}h\left(x_{1},\dots,x_{n}\right) & \cdots & \frac{\partial^{2}}{\partial x_{n}\partial x_{n}}h\left(x_{1},\dots,x_{n}\right)
\end{pmatrix}
\]

\end_inset

at a stationary point is indefinte.
\end_layout

\begin_layout Standard
Therefore when strong duality does hold maximizing over the dual Lagrangian
 
\begin_inset Formula $D\left(\mathbf{\boldsymbol{\lambda}}\right)$
\end_inset

 subject to constraint 
\begin_inset Formula $\boldsymbol{\lambda}\geq\mathbf{0}$
\end_inset

 produces the solution to the problem of 
\begin_inset Formula $\min_{\mathbf{x}}f\left(\mathbf{x}\right)\, s.t\,\mathbf{g}\left(\mathbf{x}\right)\leq\mathbf{0}$
\end_inset

.
\end_layout

\begin_layout Standard
So when does the Lagrangian have a saddle point? Well
\begin_inset Formula 
\[
\nabla L\left(\mathbf{x},\boldsymbol{\lambda}\right)=\begin{bmatrix}\nabla_{\mathbf{x}}L\left(\mathbf{x},\boldsymbol{\lambda}\right)\\
\nabla_{\boldsymbol{\lambda}}L\left(\mathbf{x},\boldsymbol{\lambda}\right)
\end{bmatrix}=\begin{bmatrix}\nabla f\left(\mathbf{x}\right)+\sum_{i=1}^{m}\lambda_{i}\nabla g_{i}\left(\mathbf{x}\right)\\
\mathbf{g}\left(\mathbf{x}\right)
\end{bmatrix}
\]

\end_inset

and so
\begin_inset Formula 
\begin{align*}
H_{L}\left(\mathbf{x},\boldsymbol{\lambda}\right) & =\begin{bmatrix}\nabla_{\mathbf{xx}}L\left(\mathbf{x},\boldsymbol{\lambda}\right) & \nabla_{\mathbf{x\boldsymbol{\lambda}}}L\left(\mathbf{x},\boldsymbol{\lambda}\right)\\
\nabla_{\mathbf{\boldsymbol{\lambda}x}}L\left(\mathbf{x},\boldsymbol{\lambda}\right) & \nabla_{\boldsymbol{\lambda}\boldsymbol{\lambda}}L\left(\mathbf{x},\boldsymbol{\lambda}\right)
\end{bmatrix}\\
 & =\begin{bmatrix}H_{f}\left(\mathbf{x}\right)+\sum_{i=1}^{m}\lambda_{i}H_{g}\left(\mathbf{x}\right) & \sum_{i=1}^{m}\nabla g_{i}\left(\mathbf{x}\right)\\
\sum_{i=1}^{m}\nabla g_{i}\left(\mathbf{x}\right) & \mathbf{0}
\end{bmatrix}
\end{align*}

\end_inset

Note that 
\begin_inset Formula $H_{L}$
\end_inset

 is a block symmetric matrix but it can never be positive or negative definite
 because of the lower 
\begin_inset Formula $\mathbf{0}$
\end_inset

 block.
\end_layout

\end_body
\end_document
