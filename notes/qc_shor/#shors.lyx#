#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass amsart
\begin_preamble
\usepackage{braket}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams
theorems-ams-extended
theorems-sec
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
So what's the deal with Quantum computing
\end_layout

\begin_layout Part
Intro
\end_layout

\begin_layout Standard
There are basically 2 magical things about QC and I'll point them out as
 we get to them.
 Today I'll cover the basics of QM/QC, a simple algorithm, experimental/empirica
l aspects.
 Next week I'll cover Shor's algorithm - Integer factorization in polylog
 time - actual realizations of quantum circuits that implement Shor's algorithm,
 and the mystical D-wave (if you don't know what that is it's the 10 milllion
 dollar 
\begin_inset Quotes eld
\end_inset

quantum computer
\begin_inset Quotes erd
\end_inset

 (air quotes) purchased by USC and Lockheed Martin).
\end_layout

\begin_layout Part
QM/Terms
\end_layout

\begin_layout Standard
Classical computing is a matter bit manipulation.
 A bit can be 1 
\series bold
xor 
\series default
0.
 In QC the bit values 0 and 1 are replaced by basis vectors 
\begin_inset Formula $\Ket{1}$
\end_inset

 and 
\begin_inset Formula $\Ket{0}$
\end_inset

 in a complex Hilbert space.
 This is silly physics notation for vectors invented by Dirac that's supposed
 to make writing down inner products natural (If you don't know what a Hilbert
 space it's just a 
\series bold
vector space
\series default
 that's a complete metric space (cauchy sequences converge) with respect
 to a metric induced by an inner product).
 This vector space is over the complex field (vector coefficients are complex
 numbers) but just imagine 
\begin_inset Formula $\mathbb{R}^{2}$
\end_inset

 with the dot product.
 The inner product is taken by 
\begin_inset Quotes eld
\end_inset

flipping the ket
\begin_inset Quotes erd
\end_inset

 to a 
\begin_inset Quotes eld
\end_inset

bra
\begin_inset Quotes erd
\end_inset

 and forming a braket:
\begin_inset Formula 
\[
\alpha\Ket{i}\rightarrow\Bra{i}\alpha^{*}
\]

\end_inset

and
\begin_inset Formula 
\[
\Bra{1}\Ket{1}=1,\Bra{0}\Ket{0}=1,\Bra{i}\Ket{j}=0
\]

\end_inset


\end_layout

\begin_layout Definition
A single qubit is a linear combination of the basic vectors 
\begin_inset Formula 
\[
\psi=\alpha\Ket{0}+\beta\Ket{1}
\]

\end_inset


\end_layout

\begin_layout Standard
So 
\begin_inset Formula $\left\{ \Ket{1},\Ket{0}\right\} $
\end_inset

 form an orthnormal basis for the Hilbert space called the 
\emph on
computational 
\emph default
basis
\emph on
,
\emph default
 vectors are broadly called 
\emph on
states 
\emph default
or 
\emph on
wave functions,
\emph default
 
\begin_inset Formula $\psi$
\end_inset

 is said to be a 
\emph on
superposition 
\emph default
of 
\begin_inset Formula $\Ket{1}$
\end_inset

 and 
\begin_inset Formula $\Ket{0}$
\end_inset

, the coefficients are called 
\emph on
probability amplitudes
\emph default
.
 Note that 
\begin_inset Formula $\Ket{0}$
\end_inset

 is not the zero vector but the 
\begin_inset Formula $0$
\end_inset

th basis vector.
 I would be remiss if I didn't mention that some people ascribe the physical
 interpretation to this model that 
\begin_inset Formula $\psi$
\end_inset

 is simultaneously both 
\begin_inset Formula $\Ket{0}$
\end_inset

 and 
\begin_inset Formula $\Ket{1}$
\end_inset

(Schrodinger's cat thing) but that is not correct.
 The truth is that we simply cannot say anything about 
\begin_inset Formula $\psi$
\end_inset

 until we measure (hairy what that means) it except the probability distribution
 for what the measurement will result in: when we measure the system/qubit/wave
 function with probability 
\begin_inset Formula $\left|\alpha\right|^{2}$
\end_inset

 we will measure 
\begin_inset Formula $\psi$
\end_inset

 to be 
\begin_inset Formula $\Ket{0}$
\end_inset

 and with probability 
\series bold

\begin_inset Formula $\left|\beta\right|^{2}$
\end_inset

 
\series default
we will be measure 
\begin_inset Formula $\psi$
\end_inset

 to be 
\begin_inset Formula $\Ket{1}$
\end_inset

.
 This is why the coefficients are called probability amplitudes.
 Once we make a measurement all information about the coefficients is lost
 since we just end up with one result, one basis vector.
 This is called non-determinstic wave function collapse or decoherence.
 There are no whys/hows/whens here - this is purely at the level of postulated
 interpretation of the mathematical model.
 So since the squares of the probability amplitudes are actual probabilities
 it must be the case that 
\begin_inset Formula 
\[
\left|\alpha\right|^{2}+\left|\beta\right|^{2}=1
\]

\end_inset


\end_layout

\begin_layout Standard
Now while you cannot uncover any information whatsoever about the qubit
 you can transform it without collapsing it.
 You are allowed to transform 
\begin_inset Formula $\psi$
\end_inset

 by any unitary transformation.
 
\series bold
These transformations correspond to/are quantum gates.
 
\series default
A unitary transformation preserves lengths (so that the sum of the squares
 of the probability amplitudes never exceed 1) and is its own inverse (preservat
ion of unit norms enforces this).
 This will be important in a second.
 Practically speaking this is matrix vector multiplciation.
 For example let 
\begin_inset Formula 
\[
H=\frac{1}{\sqrt{2}}\begin{pmatrix}1 & 1\\
1 & -1
\end{pmatrix}
\]

\end_inset

This is the Hadamard Gate.
 Very important.
 Since 
\begin_inset Formula $\Ket{0}=\left(1,0\right)^{T}$
\end_inset

 (since basis vector) we have
\begin_inset Formula 
\[
H\Ket{0}=\frac{1}{\sqrt{2}}\begin{pmatrix}1 & 1\\
1 & -1
\end{pmatrix}\begin{pmatrix}1\\
0
\end{pmatrix}=\frac{1}{\sqrt{2}}\begin{pmatrix}1\\
1
\end{pmatrix}=\frac{1}{\sqrt{2}}\left(\begin{pmatrix}1\\
0
\end{pmatrix}+\begin{pmatrix}0\\
1
\end{pmatrix}\right)=\frac{1}{\sqrt{2}}\left(\Ket{0}+\Ket{1}\right)
\]

\end_inset

and since 
\begin_inset Formula $\Ket{1}=\left(0,1\right)^{T}$
\end_inset

 we have
\begin_inset Formula 
\[
H\Ket{1}=\frac{1}{\sqrt{2}}\begin{pmatrix}1 & 1\\
1 & -1
\end{pmatrix}\begin{pmatrix}0\\
1
\end{pmatrix}=\frac{1}{\sqrt{2}}\begin{pmatrix}1\\
-1
\end{pmatrix}=\frac{1}{\sqrt{2}}\left(\begin{pmatrix}1\\
0
\end{pmatrix}-\begin{pmatrix}0\\
1
\end{pmatrix}\right)=\frac{1}{\sqrt{2}}\left(\Ket{0}-\Ket{1}\right)
\]

\end_inset

So the Hadamard Gate/operator/matrix take one basis vector and maps it to
 a super position of both.
 
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Quotation

\series bold
Takeaway: Qubits exist as superpositions/linear combinations of basis vectors
 and the squares of the coefficients determine the probability of measuring
 the qubit to be that basis vectors.
 Once a measurement is made all information is lost.
 There is no way to recover 
\begin_inset Formula $\alpha$
\end_inset

 and 
\begin_inset Formula $\beta$
\end_inset

 exactly except in constructing an ensemble and measuring all of the qubits
 in the ensemble (sampling the distribution).
 Logic gates correspond to unitary transformations (invertible, norm preserving
 matrices).
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
Now what happens when we have a two qubit system? An 
\begin_inset Formula $n$
\end_inset

-qubit system is described by a tensor product of the Hibert/Vector spaces
 of each of the individual qubits.
 It's actually our favorite thing in the world: a set of equivalence classes
 whose members are elements of the free-group over the cartesion product
 of the vector spaces under the equivalence relation
\begin_inset Formula 
\begin{eqnarray*}
\left(\alpha\psi\right)\otimes\phi & \sim & \psi\otimes\left(\alpha\phi\right)\sim\alpha\left(\psi\otimes\phi\right)\\
\left(\psi+\varphi\right)\otimes\phi & \sim & \psi\otimes\phi+\varphi\otimes\phi\\
\phi\otimes\left(\psi+\varphi\right) & \sim & \phi\otimes\psi+\phi\otimes\varphi
\end{eqnarray*}

\end_inset

For example for 
\begin_inset Formula $n=2$
\end_inset

 it is an element of the vector space 
\begin_inset Formula $V\otimes W$
\end_inset

 defined as vector space spanned by basis vectors 
\begin_inset Formula 
\[
\Ket{0}\otimes\Ket{0},\Ket{0}\otimes\Ket{1},\Ket{1}\otimes\Ket{0},\Ket{1}\otimes\Ket{1}
\]

\end_inset

(omit the 
\begin_inset Formula $\otimes$
\end_inset

 for brevity), i.e.
 
\begin_inset Formula 
\[
\psi\in V\otimes W=\alpha\Ket{0}\Ket{0}+\beta\Ket{0}\Ket{1}+\gamma\Ket{1}\Ket{0}+\delta\Ket{1}\Ket{1}
\]

\end_inset

with
\begin_inset Formula 
\[
\left|\alpha\right|^{2}+\left|\beta\right|^{2}+\left|\gamma\right|^{2}+\left|\delta\right|^{2}=1
\]

\end_inset

In particular 
\begin_inset Formula 
\begin{eqnarray*}
\left(\frac{1}{\sqrt{2}}\left(\Ket{0}+\Ket{1}\right)\right)\otimes\left(\frac{1}{\sqrt{2}}\left(\Ket{0}+\Ket{1}\right)\right) & = & \frac{1}{2}\left(\Ket{0}\Ket{0}+\Ket{0}\Ket{1}+\Ket{1}\Ket{0}+\Ket{1}\Ket{1}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard

\series bold
You can take this basically to mean that 
\begin_inset Formula $\otimes$
\end_inset

 distributes.
 
\end_layout

\begin_layout Standard

\series bold
Now in general 
\begin_inset Formula $V\otimes W$
\end_inset

 has more elements than simply the 
\begin_inset Quotes eld
\end_inset

separable
\begin_inset Quotes erd
\end_inset

 states.

\series default
 What do I mean by this? States in 
\begin_inset Formula $V\otimes W$
\end_inset

 that cannot be represented as simply the product of states in each of 
\begin_inset Formula $V$
\end_inset

 and 
\begin_inset Formula $W$
\end_inset

: For two arbitrary single qubit states in the factor spaces 
\begin_inset Formula 
\[
\psi=a\Ket{0}+b\Ket{1}
\]

\end_inset

and
\begin_inset Formula 
\[
\varphi=c\Ket{0}+d\Ket{1}
\]

\end_inset

we have
\begin_inset Formula 
\begin{eqnarray*}
\varphi\otimes\phi & = & \left(a\Ket{0}+b\Ket{1}\right)\otimes\left(c\Ket{0}+d\Ket{1}\right)\\
 & = & ac\Ket{0}\Ket{0}+ad\Ket{0}\Ket{1}+bc\Ket{1}\Ket{0}+bd\Ket{1}\Ket{1}
\end{eqnarray*}

\end_inset

and therefore to fit the general form of 
\begin_inset Formula 
\[
\psi=\psi=\alpha\Ket{0}\Ket{0}+\beta\Ket{0}\Ket{1}+\gamma\Ket{1}\Ket{0}+\delta\Ket{1}\Ket{1}\in V\otimes W
\]

\end_inset

 it must be the case that 
\begin_inset Formula 
\begin{eqnarray*}
\alpha & = & ac\\
\beta & = & ad\\
\gamma & = & bc\\
\delta & = & bd
\end{eqnarray*}

\end_inset

but then 
\begin_inset Formula $\alpha\delta=\beta\gamma$
\end_inset

.
 Therefore an arbitrary 
\begin_inset Formula $\psi$
\end_inset

 factors into a tensor product of factor qubits iff 
\begin_inset Formula $\alpha\delta=\beta\gamma$
\end_inset

.
 States that do not factor as such are called 
\emph on
entangled states.
 
\emph default
For example
\begin_inset Formula 
\[
\frac{\Ket{0}\Ket{0}+\Ket{1}\Ket{1}}{\sqrt{2}}
\]

\end_inset

cannot be factored.

\emph on
 
\series bold
\emph default
This is counterintuitive since I said cartesian product or state space of
 factors but the key word is sum, so while each of the terms in the sum
 factor the sum itself doesn't necessarily.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Quotation
Take your typical 2bit register $s0.
 If I tell you the state of $s0, for example $s0=10, that factum/factoid/piece
 of information only tells you about the states (colloquial states) of 2
 objects, each of the bits.
 A 2-qubit quantum register actually gives you information about 
\begin_inset Formula $2^{2}$
\end_inset

 things: 
\begin_inset Formula $\psi$
\end_inset

 can have non-zero probability amplitudes for any of the 4 basis vectors.
 In general while an 
\begin_inset Formula $n$
\end_inset

-bit classical register will give you information about 
\begin_inset Formula $n$
\end_inset

 objects (each of the bits) and 
\begin_inset Formula $n$
\end_inset

-qubit register will give you information about 
\begin_inset Formula $2^{n}$
\end_inset

 objects (each of the basis vectors).
 This is the first magical thing, that adding more qubits exponentially
 grows that amount of information stored in a register.
 There's a caveat here: like I mentioned before we cannot directly access
 the coefficients, that information is completely unavailable to us.
 But as we'll see we can still exploit this massive amount of information.
 
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
Gates on single qubit systems also map to gates on multi-qubit systems:
\begin_inset Formula 
\[
H=\frac{1}{\sqrt{2}}\begin{pmatrix}1 & 1\\
1 & -1
\end{pmatrix}\to H^{\otimes2}
\]

\end_inset

where the definition of 
\begin_inset Formula 
\[
H^{\otimes2}\varphi\otimes\phi=\left(H\otimes H\right)\left(\varphi\otimes\phi\right)=\left(H\varphi\right)\otimes\left(H\phi\right)
\]

\end_inset

For example 
\begin_inset Formula 
\begin{eqnarray*}
H^{\otimes2}\Ket{0}\Ket{0} & = & \left(H\Ket{0}\right)\otimes\left(H\Ket{0}\right)\\
 & = & \left(\frac{1}{\sqrt{2}}\left(\Ket{0}+\Ket{1}\right)\right)\otimes\left(\frac{1}{\sqrt{2}}\left(\Ket{0}+\Ket{1}\right)\right)\\
 & = & \frac{1}{2}\left(\Ket{0}\Ket{0}+\Ket{0}\Ket{1}+\Ket{1}\Ket{0}+\Ket{1}\Ket{1}\right)
\end{eqnarray*}

\end_inset

So in general 
\begin_inset Formula 
\[
H^{\otimes n}\underbrace{\Ket{0}\cdots\Ket{0}}_{n}=\left(H\Ket{0}\right)^{\otimes n}=\left(\frac{1}{\sqrt{2}}\left(\Ket{0}+\Ket{1}\right)\right)^{\otimes n}=\frac{1}{\sqrt{2^{n}}}\sum_{i=0}^{2^{n-1}}\Ket{i}
\]

\end_inset

where for convenience we represent 
\begin_inset Formula $\Ket{0}\Ket{1}\cdots\Ket{0}\Ket{0}$
\end_inset

 as the decimal corresponding to the binary.
 
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Quotation

\series bold
Takeaway: 
\begin_inset Formula $n$
\end_inset

-qubit systems are represented by vectors in the tensor product of the vector
 spaces that each of the individual qubits are elements of.
 A basis for this tensor product space is the set of tensor products of
 basis vectors for the factor spaces.
 The tensor product space is 
\begin_inset Quotes eld
\end_inset

bigger
\begin_inset Quotes erd
\end_inset

 than simply the cartesian product of the individual spaces: quantum entangled
 states are those which cannot be factored.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Part
Deutsch's Problem/Algorithm
\end_layout

\begin_layout Standard
Given a classical circuit for computing any 
\begin_inset Formula $f$
\end_inset

 there is a quantum circuit (reversible unitary transformation) of comparable
 efficiency which computes the transformation on the state 
\begin_inset Formula $\Ket{x}\Ket{y}\to\Ket{x}\Ket{y\oplus f\left(x\right)}$
\end_inset

(
\begin_inset Formula $\oplus$
\end_inset

 is mod 2 addition).
 Fredkin gate is a 3-bit gate universal for classical computation.
 Let 
\begin_inset Formula $U_{f}$
\end_inset

 be the quantum circuit that implements this action for and apply it to
 the 2-qubit state (which we can create by 
\begin_inset Formula $H\Ket{0}$
\end_inset

)
\begin_inset Formula 
\[
\left(\frac{\Ket{0}+\Ket{1}}{\sqrt{2}}\right)\otimes\Ket{0}=\left(\frac{\Ket{0}\otimes\Ket{0}+\Ket{1}\otimes\Ket{0}}{\sqrt{2}}\right)
\]

\end_inset

Then the output is 
\begin_inset Formula 
\begin{eqnarray*}
\psi & = & \left(\frac{\Ket{0}\otimes\Ket{0\oplus f\left(0\right)}+\Ket{1}\otimes\Ket{0\oplus f\left(1\right)}}{\sqrt{2}}\right)\\
 & = & \left(\frac{\Ket{0}\otimes\Ket{f\left(0\right)}+\Ket{1}\otimes\Ket{f\left(1\right)}}{\sqrt{2}}\right)
\end{eqnarray*}

\end_inset

Notice that 
\begin_inset Formula $f$
\end_inset

 has been evaluated at both points in its domain! This is magical thing
 #2 and is called 
\emph on
quantum
\emph default
 
\emph on
parallelism.

\emph default
 In general (if the domain of 
\begin_inset Formula $f$
\end_inset

 is larger) we can use 
\begin_inset Formula $H^{\otimes n}$
\end_inset

 to construct a state 
\begin_inset Formula 
\[
\psi=H^{\otimes n}\underbrace{\Ket{0}\cdots\Ket{0}}_{n}=\frac{1}{\sqrt{2^{n}}}\sum_{i=0}^{2^{n-1}}\Ket{i}
\]

\end_inset

a linear superposition over all basis states/vectors of the 
\begin_inset Formula $n$
\end_inset

-qubit system.
 Then we apply 
\begin_inset Formula $U_{f}$
\end_inset

 to 
\begin_inset Formula $\psi\otimes\Ket{0}$
\end_inset

 and get 
\begin_inset Formula 
\[
\phi=U_{f}\left(\psi\otimes\Ket{0}\right)=\frac{1}{\sqrt{2^{n}}}\sum_{i=0}^{2^{n-1}}\Ket{i}\Ket{f\left(i\right)}
\]

\end_inset

I.e.
 evaluating 
\begin_inset Formula $f$
\end_inset

 at all possible values in its domain simultaneously.
 But there's no free lunch.
 Though you can say that this has actually happened, been effected, you
 cannot recover this information because measurement of 
\begin_inset Formula $\phi$
\end_inset

 will return only one of the states in the sum and in doing so destroy informati
on about the others.
 You could construct an ensemble but that would completely defeat the point
 (you might as well just compute 
\begin_inset Formula $f$
\end_inset

 on a classical computer 
\begin_inset Formula $2^{n}$
\end_inset

times).
 For this to be useful you need to make use of 
\emph on
global 
\emph default
information about the probability amplitudes, which is available to you.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Quotation

\series bold
Takeaway: In theory (implementations?) you can compute any classically computabl
e function 
\begin_inset Formula $f$
\end_inset

 using a unitary transformation (quantum gate).
 Using Hadamard gates and 
\begin_inset Quotes eld
\end_inset

quantum parallelism
\begin_inset Quotes erd
\end_inset

 you can evaluate 
\begin_inset Formula $f$
\end_inset

 at many values simultaneously.
 Unfortunately you cannot recover information.
 But there's still hope.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
This is a warmup so don't Let 
\begin_inset Formula $f\left(x\right):\left\{ 0,1\right\} \to\left\{ 0,1\right\} $
\end_inset

 and suppose we are guarnteed/promised/contract that 
\begin_inset Formula $f$
\end_inset

 is either constant or balanced (half and half).
 How many evaluations classically to figure out which of the two characters
 it has? 2 of course.
 With QC you can find out in 1 application of 
\begin_inset Formula $U_{f}$
\end_inset

.
 How? First let's perform a calculation that will simplify what's to come.
\begin_inset Formula 
\begin{eqnarray*}
U_{f}\left(\Ket{x}\left(\frac{\Ket{0}-\Ket{1}}{\sqrt{2}}\right)\right) & = & U_{f}\left(\frac{\Ket{x}\Ket{0}-\Ket{x}\Ket{1}}{\sqrt{2}}\right)\\
 & = & \frac{\Ket{x}\Ket{0\oplus f\left(x\right)}-\Ket{x}\Ket{1\oplus f\left(x\right)}}{\sqrt{2}}
\end{eqnarray*}

\end_inset

Now if 
\begin_inset Formula $f\left(x\right)=0$
\end_inset

 then 
\begin_inset Formula 
\[
\frac{\Ket{x}\Ket{0\oplus f\left(x\right)}-\Ket{x}\Ket{1\oplus f\left(x\right)}}{\sqrt{2}}=\frac{\Ket{x}\Ket{0}-\Ket{x}\Ket{1}}{\sqrt{2}}
\]

\end_inset

and if 
\begin_inset Formula $f\left(x\right)=1$
\end_inset

 then because 
\begin_inset Formula $\oplus$
\end_inset

 is mod 2 
\begin_inset Formula 
\[
\frac{\Ket{x}\Ket{0\oplus f\left(x\right)}-\Ket{x}\Ket{1\oplus f\left(x\right)}}{\sqrt{2}}=\frac{\Ket{x}\Ket{1}-\Ket{x}\Ket{0}}{\sqrt{2}}
\]

\end_inset

so succintly put 
\begin_inset Formula 
\begin{eqnarray*}
U_{f}\left(\Ket{x}\left(\frac{\Ket{0}-\Ket{1}}{\sqrt{2}}\right)\right) & = & \left(-1\right)^{f\left(x\right)}\Ket{x}\left(\frac{\Ket{0}-\Ket{1}}{\sqrt{2}}\right)
\end{eqnarray*}

\end_inset

Nothing deep just algebra.
 Now we construct this circuit: 
\begin_inset Newline newline
\end_inset


\begin_inset Graphics
	filename pasted1.png
	scale 50

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\Ket{\psi_{1}} & = & H^{\otimes2}\left(\Ket{0}\otimes\Ket{1}\right)\\
 & = & \left(H\Ket{0}\right)\otimes\left(H\Ket{1}\right)\\
 & = & \left(\frac{1}{\sqrt{2}}\left(\Ket{0}+\Ket{1}\right)\right)\otimes\left(\frac{1}{\sqrt{2}}\left(\Ket{0}-\Ket{1}\right)\right)\\
 & = & \Ket{0}\otimes\frac{\Ket{0}-\Ket{1}}{\sqrt{2}}+\Ket{1}\otimes\left(\frac{\Ket{0}-\Ket{1}}{\sqrt{2}}\right)
\end{eqnarray*}

\end_inset

Then 
\begin_inset Formula 
\[
\psi_{2}=U_{f}\Ket{\psi_{1}}=\begin{cases}
\pm & \left(\frac{\Ket{0}+\Ket{1}}{\sqrt{2}}\right)\left(\frac{\Ket{0}-\Ket{1}}{\sqrt{2}}\right)\text{ if }f\left(0\right)=f\left(1\right)\\
\pm & \left(\frac{\Ket{0}-\Ket{1}}{\sqrt{2}}\right)\left(\frac{\Ket{0}-\Ket{1}}{\sqrt{2}}\right)\text{ if }f\left(0\right)\neq f\left(1\right)
\end{cases}
\]

\end_inset

The final Hadamard gate on the first qubit gives
\begin_inset Formula 
\[
\psi_{3}=\begin{cases}
\pm & \Ket{0}\left(\frac{\Ket{0}-\Ket{1}}{\sqrt{2}}\right)\text{ if }f\left(0\right)=f\left(1\right)\\
\pm & \Ket{1}\left(\frac{\Ket{0}-\Ket{1}}{\sqrt{2}}\right)\text{ if }f\left(0\right)\neq f\left(1\right)
\end{cases}
\]

\end_inset

Now if we measure the first qubit we know whether 
\begin_inset Formula $f\left(0\right)=f\left(1\right)$
\end_inset

 or 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $f\left(0\right)\neq f\left(1\right)$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 (depending on whether we get 
\begin_inset Formula $\Ket{0}$
\end_inset

or 
\begin_inset Formula $\Ket{1}$
\end_inset

) Succinctly stated this allows us to measure a global property: since 
\begin_inset Formula $f\left(0\right)\oplus f\left(1\right)=0$
\end_inset

 if 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $f\left(0\right)=f\left(1\right)$
\end_inset

 and 1 otherwise
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula 
\[
\psi_{3}=\pm\Ket{f\left(0\right)\oplus f\left(1\right)}\left(\frac{\Ket{0}-\Ket{1}}{\sqrt{2}}\right)
\]

\end_inset

The reason why we can discern global properties is in fact because of interferen
ce (entanglement).
 Naively you might think that a state like 
\begin_inset Formula $\Ket{0}\Ket{f\left(0\right)}+\Ket{1}\Ket{f\left(1\right)}$
\end_inset

 is some sort of a randomized computation (probability equal to 1/2 that
 it's the first state and same for second), either exclusively the first
 or second state.
 The truth is that they can be made to interfere with each other (using
 the final Hadamard gate).
\end_layout

\begin_layout Standard
The Deutsch-Jozsa is much more impressive.
 Now 
\begin_inset Formula $f\left(x\right):\left\{ 0,1\right\} ^{n}\to\left\{ 0,1\right\} $
\end_inset

 and we can still discover the same thing: is 
\begin_inset Formula $f$
\end_inset

 balanced or constant.
 Classicaly this would take 
\begin_inset Formula $\lceil2^{n}/2\rceil$
\end_inset

 evaluations but 
\begin_inset Quotes eld
\end_inset

quantumly
\begin_inset Quotes erd
\end_inset

 it can be done in just 1 evaluation! Top register is 
\begin_inset Quotes eld
\end_inset

query
\begin_inset Quotes erd
\end_inset

 register and bottom is 
\begin_inset Quotes eld
\end_inset

target
\begin_inset Quotes erd
\end_inset

 register.
 
\begin_inset Newline newline
\end_inset


\begin_inset Graphics
	filename pasted2.png
	scale 50

\end_inset


\begin_inset Formula 
\[
\psi_{0}=\Ket{0}^{\otimes n}\Ket{1}
\]

\end_inset

 then 
\begin_inset Formula 
\[
\psi_{1}=\sum_{x\in\left\{ 0,1\right\} ^{n}}\frac{\Ket{x}}{\sqrt{2^{n}}}\left(\frac{\Ket{0}-\Ket{1}}{\sqrt{2}}\right)
\]

\end_inset

The first register is a superposition of all basis states in the 
\begin_inset Formula $n$
\end_inset

-qubit computational basis.
 Using the simplification above again we have that 
\begin_inset Formula 
\[
\psi_{2}=U_{f}\psi_{1}=\sum_{x\in\left\{ 0,1\right\} ^{n}}\frac{\left(-1\right)^{f\left(x\right)}\Ket{x}}{\sqrt{2^{n}}}\left(\frac{\Ket{0}-\Ket{1}}{\sqrt{2}}\right)
\]

\end_inset

Now extrapolating from 
\begin_inset Formula $H\Ket{0}=\sum_{z\in\left\{ 0,1\right\} }\left(-1\right)^{0\cdot z}\Ket{z}/\sqrt{2}$
\end_inset

 and 
\begin_inset Formula $H\Ket{1}=\sum_{z\in\left\{ 0,1\right\} }\left(-1\right)^{1\cdot z}\Ket{z}/\sqrt{2}$
\end_inset

applying to 
\begin_inset Formula 
\begin{eqnarray*}
H^{\otimes n}\Ket{x_{1},\dots,x_{n}}_{x_{i}\in\left\{ 0,1\right\} } & = & \otimes_{i=1}^{n}\left(H\Ket{x_{i}}\right)_{x_{i}\in\left\{ 0,1\right\} }\\
 & = & \left(\sum_{z\in\left\{ 0,1\right\} }\frac{\left(-1\right)^{x_{i}\cdot z}}{\sqrt{2}}\Ket{z}\right)_{x_{i}\in\left\{ 0,1\right\} }^{\otimes n}\\
 & = & \sum_{z_{1},\dots,z_{n}}\frac{\left(-1\right)^{x_{1}z_{1}+\cdots+x_{n}z_{n}}}{\sqrt{2^{n}}}\Ket{z_{1},\dots,z_{n}}
\end{eqnarray*}

\end_inset

the last Hadamard operator 
\begin_inset Formula 
\[
\psi_{3}=U_{f}\psi_{1}=\sum_{z\in\left\{ 0,1\right\} ^{n}}\sum_{x\in\left\{ 0,1\right\} ^{n}}\frac{\left(-1\right)^{x\cdot z+f\left(x\right)}\Ket{x}}{2^{n}}\left(\frac{\Ket{0}-\Ket{1}}{\sqrt{2}}\right)
\]

\end_inset

where 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $x\cdot z$
\end_inset

 is bitwise inner product mod 2.
 Let's observe the top register (query register).
 Note that the amplitude for 
\begin_inset Formula $\Ket{0}^{\otimes n}$
\end_inset

 is 
\begin_inset Formula $\sum_{x}\left(-1\right)^{f\left(x\right)}/2^{n}$
\end_inset

.
 If 
\begin_inset Formula $f$
\end_inset

 is constant then
\begin_inset Formula 
\[
\sum_{x\in\left\{ 0,1\right\} ^{n}}\frac{\left(-1\right)^{f\left(x\right)}}{2^{n}}=\pm1
\]

\end_inset

and because 
\begin_inset Formula $\psi_{3}$
\end_inset

 must be unit length we will certainly measure 
\begin_inset Formula $\psi_{3}$
\end_inset

 to be in the 
\begin_inset Formula $\Ket{0}^{\otimes n}$
\end_inset

 state.
 If 
\begin_inset Formula $f$
\end_inset

 is balanced then by definition of balanced (
\begin_inset Formula $f\left(x\right)$
\end_inset

 will be even as often as odd) 
\begin_inset Formula 
\[
\sum_{x\in\left\{ 0,1\right\} ^{n}}\frac{\left(-1\right)^{f\left(x\right)}}{2^{n}}=0
\]

\end_inset

and we will certainly measure something other than 
\begin_inset Formula $\Ket{0}^{\otimes n}$
\end_inset

.
 
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Quotation

\series bold
Takeaway: We can use interference to extract global properties from 
\begin_inset Formula $n$
\end_inset

-qubit systems.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Standard
Let's talk about correspondence with physical phenomena/experimental setups.
 Is there a physical system that can serve as a representation of qubits?
 There are in fact many and I'll talk about which are practical next week
 but for now just a proof of concept.
 Take a run of the mill atom and shoot it through a magnetic field aligned
 any which way.
 
\begin_inset Newline newline
\end_inset

 
\begin_inset Graphics
	filename pasted3.png

\end_inset


\begin_inset Newline newline
\end_inset

What do we expect to happen? Well if the atom has a 
\begin_inset Quotes eld
\end_inset

magnetic dipole moment
\begin_inset Quotes erd
\end_inset

 it will be deflected as a function of the alignment of its moment with
 the transverse field.
 Because the atoms come out of the oven we expect them to have randomly
 oriented magnetic moments and so for there to be a whole continuous range
 of deflections.
 In fact what was observed was a discrete set of deflections.
 The typical heuristic for the magnetic dipole moment of the hydrogen atom
 is that the electron circles the proton and therefore induces a magnetic
 field along what we arbitrarily call the 
\begin_inset Formula $\hat{z}$
\end_inset

 axis, as if it were an eddy current.
 This is wrong.
 We all know that electrons don't orbit the nucleus.
 Indeed the magnetic dipole moment of an atom is due to the angular momentum
 of the eletron, which is quantum mechanical and quantized.
 
\end_layout

\begin_layout Standard
If the atom has no magnetic moment then we expect no deflection whatsoever.
 In fact what was observed when this experiment was performed with hydrogen
 atoms (which has zero 
\begin_inset Quotes eld
\end_inset

orbital angular momentum
\begin_inset Quotes erd
\end_inset

 and therefore should have zero magnetic moment) was that the beam was still
 split
\end_layout

\begin_layout Section
Reduction to Order Finding
\end_layout

\begin_layout Theorem
If there exists an algo to find the order of 
\begin_inset Formula $x\left(mod\, N\right)$
\end_inset

 in time 
\begin_inset Formula $\text{polylog}\left(N\right)$
\end_inset

, then there exists an algo that on input of an integer 
\begin_inset Formula $N$
\end_inset

 produces the factorization of 
\begin_inset Formula $N$
\end_inset

 in time 
\begin_inset Formula $\text{polylog}\left(N\right)$
\end_inset

 with constant probability of success.
\end_layout

\begin_layout Standard
Because 
\begin_inset Formula $N$
\end_inset

 has at most 
\begin_inset Formula $\log\left(N\right)$
\end_inset

 factors it suffices to find a single factor in 
\begin_inset Formula $O\left(\log\left(N\right)\right)$
\end_inset

 with constant probability, and then repeating the process at most 
\begin_inset Formula $\log\left(N\right)$
\end_inset

 times, but reducing the size of the input by the factor each time.
\end_layout

\begin_layout Paragraph*
Algorithm 3.2 (Shor's Reduction to Order finding)
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $L=\log\left(N\right)$
\end_inset

.
\end_layout

\begin_layout Enumerate
If 
\begin_inset Formula $N$
\end_inset

 is even, return the factor 2.
\end_layout

\begin_layout Enumerate
Check if 
\begin_inset Formula $N=a^{b}$
\end_inset

 and if so return 
\begin_inset Formula $a$
\end_inset

 (can be done in 
\begin_inset Formula $L\log\left(L\right)^{O\left(1\right)}$
\end_inset

 time).
\end_layout

\begin_layout Enumerate
Randomly choose 
\begin_inset Formula $x$
\end_inset

 in the range 
\begin_inset Formula $1<x<N-1$
\end_inset

.
 Compute 
\begin_inset Formula $\gcd\left(x,N\right)$
\end_inset

 in 
\begin_inset Formula $O\left(L^{3}\right)$
\end_inset

and if 
\begin_inset Formula $\gcd\left(x,N\right)>1$
\end_inset

 return
\end_layout

\begin_layout Enumerate
Use finding subroutine to find 
\begin_inset Formula $r$
\end_inset

 such that 
\begin_inset Formula $x^{r}=1\left(\mod\, N\right)$
\end_inset

.
\end_layout

\begin_layout Enumerate
If 
\begin_inset Formula $r$
\end_inset

 is even and 
\begin_inset Formula $x^{r/2}+1\neq\left(\mod\, N\right)$
\end_inset

 then compute 
\begin_inset Formula $\gcd\left(x^{2}-1,N\right)$
\end_inset

 and 
\begin_inset Formula $\gcd\left(x^{2}+1,N\right)$
\end_inset

 to see which is a non-trivial factor.
 Else return false (no factors).
\end_layout

\begin_layout Standard
Preliminaries
\end_layout

\begin_layout Lemma
Fermat's little theorem: suppose 
\begin_inset Formula $N$
\end_inset

 is prime, and 
\begin_inset Formula $a$
\end_inset

 is any integer.
 Then 
\begin_inset Formula $a^{N}=a\left(\mod N\right)$
\end_inset

 and if 
\begin_inset Formula $a$
\end_inset

 is not divisible by 
\begin_inset Formula $N$
\end_inset

 then 
\begin_inset Formula $a^{N-1}=1\left(\mod N\right)$
\end_inset

.
\end_layout

\begin_layout Proof
The second part follows from the first.
 The first part is proved by induction on 
\begin_inset Formula $a$
\end_inset

.
 Base case is obvious.
 Then consider 
\begin_inset Formula $\left(1+a\right)^{N}=\sum_{k=0}^{N}\binom{N}{k}a^{k}$
\end_inset

.
 
\begin_inset Formula $N$
\end_inset

 divides 
\begin_inset Formula $\binom{N}{k}$
\end_inset

 so taking 
\begin_inset Formula $\mod N$
\end_inset

 of both sides kills all terms except the first and the last so hence 
\begin_inset Formula $\left(1+a\right)^{N}\equiv1^{N}+a^{N}\mod N$
\end_inset

.
 Then applying the inductive hypothesis to 
\begin_inset Formula $a^{N}$
\end_inset

 where that 
\begin_inset Formula $\left(1+a\right)^{N}=\left(1+a\right)\mod N$
\end_inset

.
 
\end_layout

\begin_layout Lemma
\begin_inset Formula $\varphi\left(ab\right)=\varphi\left(a\right)\varphi\left(b\right)$
\end_inset


\end_layout

\begin_layout Proof
Consider 
\begin_inset Formula $x\equiv x_{a}\mod a$
\end_inset

 and 
\begin_inset Formula $x\equiv x_{b}\mod b$
\end_inset

.
 By the Chinese remainder theorem we see that there is a 1-1 correspondence
 between tuples 
\begin_inset Formula $\left(x_{a},x_{b}\right)$
\end_inset

 such that 
\begin_inset Formula $1\leq x_{a}<a$
\end_inset

,
\begin_inset Formula $1\leq x_{b}<b$
\end_inset

, 
\begin_inset Formula $\gcd\left(x_{a},a\right)=1$
\end_inset

,
\begin_inset Formula $\gcd\left(x_{b},b\right)=1$
\end_inset

 and integers 
\begin_inset Formula $x$
\end_inset

 such that 
\begin_inset Formula $1\leq x<ab$
\end_inset

, 
\begin_inset Formula $\gcd\left(x,ab\right)=1$
\end_inset

.
 There are 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\varphi\left(a\right)\varphi\left(b\right)$
\end_inset

 such pairs and therefore 
\begin_inset Formula $\varphi\left(ab\right)=\varphi\left(a\right)\varphi\left(b\right)$
\end_inset

, by the 1-1 correspondence.

\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 Relevance of gcd is that euler totient counts only those which are coprime.
 I guess this is actually part of the proof the 
\begin_inset Formula $Z_{N}$
\end_inset

 factors.
\end_layout

\begin_layout Standard
In general 
\end_layout

\begin_layout Lemma
Euler-totient theorem: suppose 
\begin_inset Formula $a$
\end_inset

 is co-prime to 
\begin_inset Formula $N$
\end_inset

.
 Then 
\begin_inset Formula $a^{\varphi\left(N)\right)}=1\mod N$
\end_inset

.
\end_layout

\begin_layout Proof
Again by induction.
 Base case is obvious.
 Assume 
\begin_inset Formula $a^{\varphi\left(p^{\alpha}\right)}=1+kp^{\alpha}$
\end_inset

 , i.e.
 
\begin_inset Formula $a^{\varphi\left(p^{\alpha}\right)}\equiv1\mod p^{\alpha}$
\end_inset

.
 Then by 
\begin_inset Formula $\varphi\left(p^{\alpha}\right)=p^{\alpha-1}\left(p-1\right)$
\end_inset

 it's the case that 
\begin_inset Formula 
\begin{align*}
a^{\varphi\left(p^{\alpha+1}\right)} & =a^{\varphi\left(p^{\alpha}\right)\left(p-1\right)}\\
 & =a^{p\varphi\left(p^{\alpha}\right)}\\
 & =\left(1+kp^{\alpha}\right)^{p}\\
 & =1+\sum_{j=1}^{p}\binom{p}{j}k^{j}p^{j\alpha}
\end{align*}

\end_inset

then using the same trick of dividing by 
\begin_inset Formula $p^{\alpha+1}$
\end_inset

 to kill terms in the sum we have 
\begin_inset Formula 
\begin{align*}
a^{\varphi\left(p^{\alpha+1}\right)} & \equiv1\mod p^{\alpha+1}
\end{align*}

\end_inset

which completes the induction.
 Then in general since 
\begin_inset Formula $N=\prod_{i}p_{i}^{\alpha_{i}}$
\end_inset

, 
\begin_inset Formula $a^{\varphi\left(N\right)}\equiv1\mod p_{i}^{\alpha_{i}}$
\end_inset

 for all 
\begin_inset Formula $j$
\end_inset

, as 
\begin_inset Formula $\varphi\left(N\right)$
\end_inset

 is a multiple of 
\begin_inset Formula $\varphi\left(p_{i}^{\alpha_{i}}\right)$
\end_inset

, by lemma 4.
 Apply the Chinese remainder theorem any solution to the set of equations
 
\begin_inset Formula $x\equiv1\mod p_{j}^{\alpha_{j}}$
\end_inset

 must satisfy 
\begin_inset Formula $x=1\mod N$
\end_inset

 and therefore since 
\begin_inset Formula $a^{\varphi\left(p^{\alpha}\right)}\equiv1\mod p^{\alpha}$
\end_inset

 it's the case that 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $a^{\varphi\left(N\right)}\equiv1\mod N$
\end_inset

.
\end_layout

\begin_layout Paragraph*
Facts
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathbb{Z}_{N}^{*}$
\end_inset

, all those element in 
\begin_inset Formula $\mathbb{Z}_{N}$
\end_inset

 which have inverses, i.e.
 all those elements co-prime to 
\begin_inset Formula $N$
\end_inset

, forms a cyclic group when 
\begin_inset Formula $N=p^{\alpha}$
\end_inset

, i.e.
 there's a generator, and the order of that generator, and the size of the
 group is 
\begin_inset Formula $\varphi\left(p^{\alpha}\right)=p^{\alpha}\left(p-1\right)$
\end_inset

.
\end_layout

\begin_layout Enumerate
Lagrange's theorem: the order of a subgroup divides the order of the group.
 Therefore the subgroup generated by any particular element in 
\begin_inset Formula $\mathbb{Z}_{N}^{*}$
\end_inset

, say 
\begin_inset Formula $a$
\end_inset

, has some order dividing 
\begin_inset Formula $\varphi\left(N\right)$
\end_inset

 and therefore 
\begin_inset Formula $a^{\varphi\left(N\right)}\equiv1\mod N$
\end_inset

.
 Therefore for any element 
\begin_inset Formula $a\in\mathbb{Z}_{N}^{*}$
\end_inset

 the order of 
\begin_inset Formula $a$
\end_inset

 is either 
\begin_inset Formula $\varphi\left(N\right)$
\end_inset

 or divides 
\begin_inset Formula $\varphi\left(N\right)$
\end_inset

 (since the subgroup generated by 
\begin_inset Formula $a$
\end_inset

 has to divide 
\begin_inset Formula $\varphi\left(N\right)$
\end_inset

).
\end_layout

\begin_layout Subsection*
Finally leading up to why the algorithm works.
\end_layout

\begin_layout Lemma
For every 
\begin_inset Formula $N$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

 if 
\begin_inset Formula $y^{2}\equiv1\left(\mod\, N\right)$
\end_inset

 and 
\begin_inset Formula $y-1\not\equiv0\left(\mod\, N\right)$
\end_inset

 nor 
\begin_inset Formula $y+1\not\equiv0\left(\mod\, N\right)$
\end_inset

, then 
\begin_inset Formula $\gcd\left(y-1,N\right)$
\end_inset

 is a factor of 
\begin_inset Formula $N$
\end_inset

.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $y$
\end_inset

 be such that 
\begin_inset Formula $y^{2}-1\equiv\left(\mod\, N\right)$
\end_inset

 and 
\begin_inset Formula $y-1\not\equiv0\left(\mod\, N\right)$
\end_inset

 nor 
\begin_inset Formula $y+1\not\equiv0\left(\mod\, N\right)$
\end_inset

.
 Then 
\begin_inset Formula $y^{2}-1\equiv\left(y-1\right)\left(y+1\right)\equiv\left(\mod\, N\right)$
\end_inset

 and so there exists 
\begin_inset Formula $m\in\mathbb{N}$
\end_inset

 such that 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\left(y-1\right)\left(y+1\right)=mN$
\end_inset

, i.e.
 
\begin_inset Formula $\frac{\left(y-1\right)\left(y+1\right)}{N}=m$
\end_inset

.
 But 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula $y-1\not\equiv0\left(\mod\, N\right)$
\end_inset

 and 
\begin_inset Formula $y+1\not\equiv0\left(\mod\, N\right)$
\end_inset

 means 
\begin_inset Formula $N$
\end_inset

 there do not exists 
\begin_inset Formula $a,b$
\end_inset

 such that 
\begin_inset Formula $y-1=aN$
\end_inset

 and 
\begin_inset Formula $y+1=bN$
\end_inset

, i.e.
 
\begin_inset Formula $N$
\end_inset

 divides neither 
\begin_inset Formula $y-1$
\end_inset

 nor 
\begin_inset Formula $y+1$
\end_inset

.
 But
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 then for 
\begin_inset Formula $\frac{\left(y-1\right)\left(y+1\right)}{N}$
\end_inset

 to equal an integer it must be the case that each of 
\begin_inset Formula $y-1$
\end_inset

 and 
\begin_inset Formula $y+1$
\end_inset

 contain a factor of 
\begin_inset Formula $N$
\end_inset

.
 More thoroughly: suppose 
\begin_inset Formula $\gcd\left(y-1,N\right)=1$
\end_inset

 then for 
\begin_inset Formula $\frac{\left(y-1\right)\left(y+1\right)}{N}=m$
\end_inset

 it must be the case that 
\begin_inset Formula $N|\left(y+1\right)$
\end_inset

, a contradiction, similarly if 
\begin_inset Formula $\gcd\left(y-1,N\right)=N$
\end_inset

 then 
\begin_inset Formula $N|\left(y-1\right)$
\end_inset

 or 
\begin_inset Formula $y-1=N$
\end_inset

, both of which are disqualified by 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula $y-1\not\equiv0\left(\mod\, N\right)$
\end_inset

.
\end_layout

\begin_layout Lemma
Let p be an odd prime.
 Let 
\begin_inset Formula $2^{d}$
\end_inset

 be the largest power of 
\begin_inset Formula $2$
\end_inset

 dividing 
\begin_inset Formula $\varphi\left(p^{\alpha}\right)$
\end_inset

.
 Then with probability 1/2 
\begin_inset Formula $2^{d}$
\end_inset

 divides the order modulo 
\begin_inset Formula $p^{\alpha}$
\end_inset

 of a randomly chosen element in 
\begin_inset Formula $\mathbb{Z}_{p^{\alpha}}^{*}$
\end_inset

.
\end_layout

\begin_layout Proof
Note that 
\begin_inset Formula $\varphi\left(p^{\alpha}\right)=p^{\alpha}\left(p-1\right)$
\end_inset

 is even since 
\begin_inset Formula $p$
\end_inset

 is odd, and thus 
\begin_inset Formula $d\geq1$
\end_inset

.
 Since 
\begin_inset Formula $\mathbb{Z}_{p^{\alpha}}^{*}$
\end_inset

 is a cyclic group there exists a generator 
\begin_inset Formula $g$
\end_inset

 for it, such that any element 
\begin_inset Formula $x\in\mathbb{Z}_{p^{\alpha}}^{*}$
\end_inset

 can be written as 
\begin_inset Formula $g^{k}\mod p^{\alpha}$
\end_inset

 with 
\begin_inset Formula $1\leq k\leq\varphi\left(p^{\alpha}\right)$
\end_inset

.
 Let 
\begin_inset Formula $r$
\end_inset

 be the order of this element and consider to cases.
 If 
\begin_inset Formula $k$
\end_inset

 is odd then 
\begin_inset Formula $\left(x\right)^{r}\equiv\left(g^{k}\right)^{r}\equiv g^{kr}\equiv1\mod p^{\alpha}$
\end_inset

.
 Since 
\begin_inset Formula $g$
\end_inset

 is the generator of 
\begin_inset Formula $\mathbb{Z}_{p^{\alpha}}^{*}$
\end_inset

 its order is 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\varphi\left(p^{\alpha}\right)$
\end_inset

 and therefore it can be equivalent to 1 
\begin_inset Formula $\mod p^{\alpha}$
\end_inset

 iff 
\begin_inset Formula $\varphi\left(p^{\alpha}\right)|kr$
\end_inset

, and thus 
\begin_inset Formula $2^{d}|r$
\end_inset

 since 
\begin_inset Formula $k$
\end_inset

 is odd.
 The second case is when 
\begin_inset Formula $k$
\end_inset

 is even.
 Then 
\begin_inset Formula 
\[
\left(x\right)^{\varphi\left(p^{\alpha}\right)/2}\equiv g^{k\varphi\left(p^{\alpha}\right)/2}=\left(g^{\varphi\left(p^{\alpha}\right)}\right)^{k/2}\equiv1^{k/2}\mod p^{\alpha}\equiv1\mod p^{\alpha}
\]

\end_inset

and therefore 
\begin_inset Formula $r|\varphi\left(p^{\alpha}\right)/2$
\end_inset

 since 
\begin_inset Formula $r$
\end_inset

 is the period of 
\begin_inset Formula $x$
\end_inset

, from which it's clear that 
\begin_inset Formula $2^{d}$
\end_inset

 does not divide 
\begin_inset Formula $r$
\end_inset

, since 
\begin_inset Formula $\varphi\left(p^{\alpha}\right)=2^{d}c$
\end_inset

 and 
\begin_inset Formula $r|\varphi\left(p^{\alpha}\right)/2\iff r|2^{d-1}c\iff r\cdot m=2^{d-1}c$
\end_inset

 and so 
\begin_inset Formula $2^{d}$
\end_inset

 can't divide 
\begin_inset Formula $r$
\end_inset

 because then it would divide 
\begin_inset Formula $2^{d-1}c$
\end_inset

.
 Furthermore clearly for 
\begin_inset Formula $d'>d$
\end_inset

 
\begin_inset Formula $2^{d'}$
\end_inset

 doesn't divide 
\begin_inset Formula $r$
\end_inset

 either.
 And the converse is true as well: if 
\begin_inset Formula $2^{d}$
\end_inset

 divides then 
\begin_inset Formula $2^{d'<d}$
\end_inset

 divides as well.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Therefore 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula $\mathbb{Z}_{p^{\alpha}}^{*}$
\end_inset

 is divided into 2 sets of equal size: those elements which may be written
 as 
\begin_inset Formula $g^{k}$
\end_inset

 for some odd 
\begin_inset Formula $k$
\end_inset

 and for which 
\begin_inset Formula $2^{d}|r$
\end_inset

 and those which may be written as 
\begin_inset Formula $g^{k}$
\end_inset

 for even 
\begin_inset Formula $k$
\end_inset

 but 
\begin_inset Formula $2^{d}\not|r$
\end_inset

.
 Thus with probability 
\begin_inset Formula $1/2$
\end_inset

 
\begin_inset Formula $2^{d}$
\end_inset

 divides the order of an arbitrary element in 
\begin_inset Formula $\mathbb{Z}_{p^{\alpha}}^{*}$
\end_inset

 and with probability 
\begin_inset Formula $1/2$
\end_inset

 it doesn't.
\end_layout

\begin_layout Subsubsection*
Last step
\end_layout

\begin_layout Lemma
Suppose 
\begin_inset Formula $N=p_{1}^{\alpha_{1}}\cdots p_{m}^{\alpha_{m}}$
\end_inset

 is an odd composite integer.
 Let 
\begin_inset Formula $x$
\end_inset

 be chosen uniformly at random from 
\begin_inset Formula $\mathbb{Z}_{N}^{*}$
\end_inset

, and let 
\begin_inset Formula $r$
\end_inset

 be the order of 
\begin_inset Formula $x$
\end_inset

, modulo 
\begin_inset Formula $N$
\end_inset

.
 Then 
\begin_inset Formula 
\[
P\left(r\text{ is even and }x^{r/2}\neq-1\mod N\right)\geq1-\frac{1}{2^{m}}
\]

\end_inset

which is equivalent to 
\begin_inset Formula 
\[
P\left(r\text{ is odd or }x^{r/2}=-1\mod N\right)\leq\frac{1}{2^{m}}
\]

\end_inset


\end_layout

\begin_layout Proof
By the Chinese remainder theorem pick such an 
\begin_inset Formula $x$
\end_inset

 uniformly in 
\begin_inset Formula $\mathbb{Z}_{N}^{*}$
\end_inset

 is equivalent to pick 
\begin_inset Formula $x_{i}\in\mathbb{Z}_{p_{j}^{\alpha_{j}}}^{*}$
\end_inset

 and requiring that 
\begin_inset Formula $x=x_{j}\mod p_{j}^{\alpha_{j}}$
\end_inset

 for each 
\begin_inset Formula $j$
\end_inset

 .
 Let 
\begin_inset Formula $r_{j}$
\end_inset

 be the order of 
\begin_inset Formula $x_{j}$
\end_inset

 modulo 
\begin_inset Formula $p_{j}^{\alpha_{j}}$
\end_inset

.
 Let 
\begin_inset Formula $2^{d_{j}}$
\end_inset

 be the largest power of 
\begin_inset Formula $2$
\end_inset

 that divides each 
\begin_inset Formula $r_{j}$
\end_inset

 and 
\begin_inset Formula $2^{d}$
\end_inset

 be the largest power that divides 
\begin_inset Formula $r$
\end_inset

.
 The conclusion will follow if in either case (r odd or 
\begin_inset Formula $x^{r/2}=-1\mod N$
\end_inset

) requires that 
\begin_inset Formula $d_{j}=d$
\end_inset

 for all 
\begin_inset Formula $j$
\end_inset

, the probability of which is 
\begin_inset Formula $1/2^{m}$
\end_inset

 by lemma 6, since 
\begin_inset Formula $d_{j}$
\end_inset

 was defined such that 
\begin_inset Formula $2^{d_{j}}$
\end_inset

 divides 
\begin_inset Formula $r_{j}$
\end_inset

, an event that happens with probability exactly 
\begin_inset Formula $1/2$
\end_inset

.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Firstly 
\begin_inset Formula $r_{j}|r$
\end_inset

 for all 
\begin_inset Formula $j$
\end_inset

 since 
\begin_inset Formula $x^{r}\equiv\left(x_{j}\right)^{r}\equiv1\mod p_{j}^{\alpha_{j}}$
\end_inset

.
 Then if r is odd so are all of 
\begin_inset Formula $r_{j}$
\end_inset

 and so 
\begin_inset Formula $d_{j}=0$
\end_inset

.
 Then by lemma 6 the probability of this occurring, that for each 
\begin_inset Formula $x_{j}$
\end_inset

 the largest power of 
\begin_inset Formula $2$
\end_inset

 that divides it is is 
\begin_inset Formula $2^{0}$
\end_inset

 1/2.
\end_layout

\end_body
\end_document
