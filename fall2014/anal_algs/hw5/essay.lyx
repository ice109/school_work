#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble

%
\usepackage{mathdots}
\usepackage{listings}
\usepackage{tikz}
\usepackage{pgf}
\usepackage{tikz-qtree}
\usepackage{multirow}
\usepackage{rotating}
\usepackage{amsfonts}\usepackage{nopageno}%%%  The following few lines affect the margin sizes. 
\addtolength{\topmargin}{-.5in}
\setlength{\textwidth}{6in}       
\setlength{\oddsidemargin}{.25in}              
\setlength{\evensidemargin}{.25in}         
  
\setlength{\textheight}{9in}
\renewcommand{\baselinestretch}{1}
\reversemarginpar   

\lstset{
numbers=left
}


%
%
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding auto
\fontencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 2
\use_esint 1
\use_mhchem 0
\use_mathdots 0
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "frame=single"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
COT5405 Homework 5 Essay
\end_layout

\begin_layout Author
Maksim Levental
\end_layout

\begin_layout Date
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
today
\end_layout

\end_inset


\end_layout

\begin_layout Standard
RSA is a 
\begin_inset Quotes eld
\end_inset

cryptosystem
\begin_inset Quotes erd
\end_inset

 developed by Ron Rivest, Adi Shamir, and Leonard Adleman
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Suppose two entities, Max and Alex, wanted to securely communicate over
 the internet.
 Each entity has what's called a 
\series bold
public
\series default
 
\series bold
key
\series default
 and a 
\series bold
private key
\series default
.
 Public keys are publicized and private keys are kept secret (and should
 be very difficult to determine).
 These keys are actually functions on 
\begin_inset Formula $\mathcal{D}$
\end_inset

, the set of all finite-length bit sequences that are inverses of each other,
 i.e.
 for a message 
\begin_inset Formula $m\in\mathcal{D}$
\end_inset

 let 
\begin_inset Formula $Pr(m)$
\end_inset

 and 
\begin_inset Formula $Pu(m)$
\end_inset

 be the unique functions from 
\begin_inset Formula $\mathcal{D}\rightarrow\mathcal{D}$
\end_inset

 such that 
\begin_inset Formula $m=Pr(Pu(m))=Pu(Pr(m))$
\end_inset

.
 Now suppose Max wants to send Alex a message that only Alex can read.
 How can he do this? Simple: apply the function 
\begin_inset Formula $Pu$
\end_inset

 to a message 
\begin_inset Formula $m$
\end_inset

 to produce a 
\series bold
ciphertext
\series default
 
\begin_inset Formula $c=Pu(m)$
\end_inset

.
 Then Alex, being in possession of 
\begin_inset Formula $Pu$
\end_inset

's inverse will be able to compute 
\series bold

\begin_inset Formula $m$
\end_inset


\series default
 by 
\begin_inset Formula $m=Pr(c)=Pr(Pu(m))$
\end_inset

.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

One can also implement digital signatures using RSA; suppose Alex wants
 to digitally sign a message, certifying authenticity (that he in fact wrote
 it).
 He can do this by composing a message 
\begin_inset Formula $m'$
\end_inset

, then applying his 
\begin_inset Formula $Pr$
\end_inset

 to it, i.e.
 
\begin_inset Formula $\sigma=Pr(m')$
\end_inset

, and then sending the pair 
\begin_inset Formula $(\sigma,m')$
\end_inset

 to Max.
 Then Max applies Alex's public key to 
\begin_inset Formula $\sigma$
\end_inset

 and asserts  
\begin_inset Formula $Pu(\sigma)=Pu(Pr(m'))=m'$
\end_inset

.
 By uniqueness only Alex could have computed 
\begin_inset Formula $\sigma$
\end_inset

 and so if the assert doesn't throw an exception it's clear that the message
 is in fact authentically Alex's.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

A typical implementation of RSA implements 
\begin_inset Formula $Pu\left(m\right)=m^{e}\mod n$
\end_inset

 and 
\begin_inset Formula $Pr\left(c\right)=c^{d}\mod n$
\end_inset

, where 
\begin_inset Formula $e\cdot d=1\mod\phi\left(n\right)$
\end_inset

, where 
\begin_inset Formula $n=p\cdot q$
\end_inset

 for two very very large prime numbers and 
\begin_inset Formula $\phi\left(n\right)$
\end_inset

 is the number of integers less than 
\begin_inset Formula $n$
\end_inset

 and co-prime to 
\begin_inset Formula $n$
\end_inset

.
 The proof that 
\begin_inset Formula $m$
\end_inset

 and 
\begin_inset Formula $c$
\end_inset

 are recoverable from 
\begin_inset Formula $Pu\left(m\right)$
\end_inset

 and 
\begin_inset Formula $Pr\left(c\right)$
\end_inset

 follows from the fact that 
\begin_inset Formula $m^{ed}\mod p=m\mod p$
\end_inset

 and 
\begin_inset Formula $m^{ed}\mod q=m\mod q$
\end_inset

 and then by Chinese remainder theorem
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

 
\begin_inset Formula $m^{ed}\mod n=m\mod n$
\end_inset

.
 The reason that 
\begin_inset Formula $p$
\end_inset

 and 
\begin_inset Formula $q$
\end_inset

 are chosen to be large prime numbers is so that 
\begin_inset Formula $m^{ed}\mod q$
\end_inset

 cannot be computed given 
\begin_inset Formula $e$
\end_inset

, i.e.
 
\begin_inset Formula $n$
\end_inset

 cannot be factored in a reasonable amount of time.
 The current state of the art algorithm for factoring large composite integers
 is the general number field sieve and it runs in 
\begin_inset Formula $O\left(\exp\left(\left(\begin{matrix}\frac{64}{9}\end{matrix}b\right)^{\frac{1}{3}}(\log b)^{\frac{2}{3}}\right)\right)$
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "key-3"

\end_inset

 and RSA strongly depends on there being no polynomial time prime-factorization
 algorithm.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

An interesting development in this line of research is that there exists
 a quantum algorithm that factors in polynomial time.
 Shor's algorithm is in the complexity class BQP (bounded error quantum
 polynomial time) and runs in 
\begin_inset Formula $O((\log n)^{3})$
\end_inset

.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Shor's algorithm reduces the problem of factoring a large integer 
\begin_inset Formula $n$
\end_inset

 into the equivalent problem of finding the period of a function 
\begin_inset Formula $x^{a}$
\end_inset

; if one can find the order 
\begin_inset Formula $x^{a}\mod n$
\end_inset

 for some 
\begin_inset Formula $x$
\end_inset

 which is co-prime to 
\begin_inset Formula $n$
\end_inset

, and such that the order 
\begin_inset Formula $a$
\end_inset

 is even then one can factor 
\begin_inset Formula $x^{a}\equiv\left(x^{a/2}-1\right)\left(x^{a/2}+1\right)\mod n$
\end_inset

, and further such that 
\begin_inset Formula $\left(x^{a/2}+1\right)\not\equiv0\mod n$
\end_inset

, then both of 
\begin_inset Formula $x^{a/2}-1$
\end_inset

 and 
\begin_inset Formula $x^{a/2}+1$
\end_inset

 must have a non-trivial common with factor 
\begin_inset Formula $n$
\end_inset

.
 If 
\begin_inset Formula $x$
\end_inset

 is picked uniformly from 
\begin_inset Formula $\mathbb{Z}_{n}^{\times}$
\end_inset

, the field of integers co-prime to 
\begin_inset Formula $n$
\end_inset

, the with probability greater than 
\begin_inset Formula $1-\left(\frac{1}{2}\right)^{m}$
\end_inset

, 
\begin_inset Formula $x$
\end_inset

 will have the required properties 
\begin_inset CommandInset citation
LatexCommand cite
key "key-6"

\end_inset

.
 It is the computation of the order 
\begin_inset Formula $x^{a}\mod n$
\end_inset

 that is performed on a quantum computer using; the key step is the Hadamard
 convolution operator and the quantum DFT 
\begin_inset CommandInset citation
LatexCommand cite
key "key-7"

\end_inset

.
 To date the composite integer 15 has been factored successfully 
\begin_inset CommandInset citation
LatexCommand cite
key "key-8"

\end_inset

.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"

\end_inset

Rivest, R.; Shamir, A.; Adleman, L.
 (1978) 
\begin_inset Quotes eld
\end_inset

A Method for Obtaining Digital Signatures and Public-Key Cryptosystems
\begin_inset Quotes erd
\end_inset

.
 Communications of the ACM 21 (2): 120-126
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"

\end_inset

Cormen, Thomas H.; Leiserson, Charles E., Rivest, Ronald L., Stein, Clifford
 (2009) [1990].
 Introduction to Algorithms (3rd ed.).
 MIT Press and McGraw-Hill.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-3"

\end_inset

Pomerance, Carl (December 1996).
 
\begin_inset Quotes eld
\end_inset

A Tale of Two Sieves
\begin_inset Quotes erd
\end_inset

.
 Notices of the AMS 43 (12).
 pp.
 1473-1485.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-5"

\end_inset

P.
 Shor, Algorithms for Quantum Computation: Discrete Logarithm and Factoring,
 Proc.
 35th Annual Symposium on Foundations of Computer Science (1994) 124-134
 and SIAM J.
 Comput.
 26 (1997) 1484-1509.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-6"

\end_inset

M.A.
 Nielsen and I.L.
 Chuang, Quantum Computation and Quantum Information, Cambridge University
 Press, Cambridge (2000).
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-7"

\end_inset

Lavor, C., L.
 R.
 U.
 Manssur, and R.
 Portugal.
 
\begin_inset Quotes eld
\end_inset

Shor's Algorithm for Factoring Large Integers.
\begin_inset Quotes erd
\end_inset

 arXiv preprint quant-ph/0303175 (2003).
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-8"

\end_inset

Lieven M.
 K.
 Vandersypen, et al (2007-12-27).
 
\begin_inset Quotes eld
\end_inset

NMR quantum computing: Realizing Shor's algorithm
\begin_inset Quotes erd
\end_inset

.
 Nature.
\end_layout

\end_body
\end_document
