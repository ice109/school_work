#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble

%
\usepackage{mathdots}
\usepackage{listings}
\usepackage{tikz}
\usepackage{pgf}
\usepackage{tikz-qtree}
\usepackage{multirow}
\usepackage{rotating}
\usepackage{amsfonts}\usepackage{nopageno}%%%  The following few lines affect the margin sizes. 
\addtolength{\topmargin}{-.5in}
\setlength{\textwidth}{6in}       
\setlength{\oddsidemargin}{.25in}              
\setlength{\evensidemargin}{.25in}         
  
\setlength{\textheight}{9in}
\renewcommand{\baselinestretch}{1}
\reversemarginpar   

\lstset{
numbers=left
}


%
%
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 2
\use_esint 1
\use_mhchem 0
\use_mathdots 0
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "frame=single"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
COT5405 Homework 3 Solutions
\end_layout

\begin_layout Author
Maksim Levental
\end_layout

\begin_layout Date
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
today
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
A flat network is one where all devices are on the same segment and in the
 same broadcast domain.
 This is accomplished by connecting all devices to several hubs or one small
 switch.
 The effect is that all edges can each all other edges without transiting
 through intermediary bridges or routers.
 The advantages of a flat network topology is that it is adequate for up
 to a few hundred devices (hence cheaper than if many switches and routers
 were purchased), it's easy to implement, and manage.
 But its disadvantage is that is less fault tolerant (if the single switch
 fails the network becomes a completely disconnected topology/graph), poor
 security (all nodes accessible from all other nodes, easier to hack), congestio
n due to all traffic flowing through one switch, poor scalability because
 of congestion.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

A hierachical network is one where the network topology is divided into
 discrete layers, and each layer has a specific function.
 Typically there is a core layer of routers and switches optimized to forward
 traffic as quickly as possible, a distribution layer that defines network
 boundaries and broadcast domains and where MAC filtering is done, and finally
 the access layer where users actually access the network.
 The advantages are that isolates subsets of the network making it more
 robust as a whole, more scalable through more efficient routing tables,
 and allows for specialization of particular subdomains of a network.
 The disadvantges are operating overhead (expensive equipment) and sub-optimal
 routing of packets.
\end_layout

\begin_layout Enumerate
The internet architecture administratively speaking is a loose hierarchy
 of administrative providers scoped by region.
 At the center there is a small number of well-connected large Tier-1 providers
 that provide national and international coverage.
 Then there are Tier-2 local providers that provide service to regions,
 and peer to each other to bypass Tier-1 providers.
 Finally there are the 
\begin_inset Quotes eld
\end_inset

last-hop
\begin_inset Quotes erd
\end_inset

 local ISPs that that provide direct access to users.
 In terms of routing the internet is a layered protocol architecture.
 The advantages, from a routing point of view, are 1.
 that the structure directly reflects the relationships between edges and
 nodes, providing an adequate reference model for study and theory 2.
 it is modular so robust to upgrades and changes in protocols and layers
 in the stack 3.
 is flexible enough to accommodate future innovations for things such as
 mobile network or other novel forms of connectivity.
 The disadvantages are 1.
 overhead of headers being concatenated with all packets in order to facilitate
 commuting through all of the layers 2.
 redundancy of some functionality, such as reliability/retransmission being
 implemented in the transport layer and link layer and routing being implemented
 in the network layer and link layer.
 
\end_layout

\begin_layout Enumerate
For circuit-switchednetworks the transmission time is a function of whether
 (TDM) time-domain modulation is used or (FDM) frequency-domain modulation
 is used.
 If TDM is used then the total transmission time is a function of the 
\begin_inset Formula $L_{s}$
\end_inset

 link speed, 
\begin_inset Formula $T_{TDM}$
\end_inset

 number of slots per second dictated by the TDM, 
\begin_inset Formula $C$
\end_inset

 time delay to establish a circuit, and 
\begin_inset Formula $P$
\end_inset

 propagation delay.
 
\begin_inset Formula $L_{s},T_{TDM},C$
\end_inset

 are all variable while 
\begin_inset Formula $P$
\end_inset

 is a matter of speed of light medium and hence fixed.
 Therefore in circuit switched networks the time to establish a circuit
 and propagation delay are major determinants of overall delay.
 As already mentioned propagation delay is a function of distance between
 edges (
\begin_inset Formula $100\mu s/20km$
\end_inset

) and therefore in a sense dynamic.
 
\begin_inset Formula $C$
\end_inset

, the time to establish a circuit is also dynamic in the sense that if the
 network is heavily loaded one might have to wait a long time for an open-circui
t.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

For packet-switched networks in general the 
\begin_inset Quotes eld
\end_inset

nodal
\begin_inset Quotes erd
\end_inset

 delay (delay per node) is a function of 
\begin_inset Formula $d_{proc}$
\end_inset

 processing delay (the time taken by the router to process the packet, error
 checking, determining output link), 
\begin_inset Formula $d_{queue}$
\end_inset

 the delay due to be queued in the buffer of a node, 
\begin_inset Formula $d_{trans}$
\end_inset

 the transmission delay (the actual amount of time it takes to push all
 of the bits into the pipe), 
\begin_inset Formula $d_{prob}$
\end_inset

 the same propagation delay as for circuit-switched networks.
 Hence 
\begin_inset Formula 
\[
d_{nodal}=d_{proc}+d_{queue}+d_{trans}+d_{prop}
\]

\end_inset

and in total if 
\begin_inset Formula $N=\{nodes\}$
\end_inset

 and 
\begin_inset Formula $D$
\end_inset

 is the total delay then 
\begin_inset Formula 
\[
D=\sum_{n\in N}d_{n}
\]

\end_inset

At each node 
\begin_inset Formula $d_{proc}$
\end_inset

 is dynamic in the sense that it's a function of how fast the router is
 and how much error loss from the last hop, 
\begin_inset Formula $d_{queue}$
\end_inset

 is definitely dynamic in the sense that it's longer when congestion is
 higher, 
\begin_inset Formula $d_{trans}$
\end_inset

 is fixed as a function of the packet size, 
\begin_inset Formula $d_{prop}$
\end_inset

 is only dynamic in the sense that nodes could be separated by different
 distances.
\end_layout

\begin_layout Enumerate
For circuit-switched networks guarantees can be made about quality if it's
 taken for granted that you either have a circuit reserved or you can obtain
 a circuit reservation.
 Since reserved circuits have dedicated throughput there is no loss of quality
 for customers already being served when load is high, but customers attempting
 to obtain circuits during times of heavy load will be denied entry into
 the network, and in that sense quality degrades.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

For packet-switched networks it is the case that only statistical guarantees
 can be made about quality and that during times of heavy congestion quality
 will degrade.
\end_layout

\begin_layout Enumerate
The four design criteria of utmost importance during the formative years
 of the internet were scalability and economic access, robustness, reliability,
 and evolvability.
 To make the internet scalable and economic it was built using infrastructure
 that shared resources in order to reduce reservation time/need - the packet-swi
tching model instead of the circuit-switching model.
 To make the internet more robust it was designed to reroute upon failure,
 use stateless connections (so that functionality didn't hinge on some resource
 which stored part of the state being persistent.
 To make the internet more reliable lost packet can be retransmitted.
 Finally to make the internet evolvable all of the complexity was kept out
 of the core and pushed to the edges, so that drastic changes wouldn't necessita
te changing core functionality.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

If I were redesigning the internet I would make security and privacy primary
 concerns.
 Security should be a concern since so much of the internet's functionality
 is being used for commerce and banking.
 Privacy concerns, in light of recent revelations about certain government
 organizations, is obviously important.
\end_layout

\begin_layout Enumerate
asdasd
\end_layout

\begin_layout Enumerate
The first type of attack is a bandwidth flooding attach, where an attacker
 uses a botnet to send packets to a root server to overload it.
 To thwart such an attack root servers typically use packet filters to block
 internet control message protocol (ICMP) messages.
 The second type of attack is a distributed denial of service attack on
 top-level domain servers, overwhelming them by requesting resolution from
 many sources simultaneously.
 The effects of this are mitigated by using local caches, so that if in
 fact a TLD is overwhelmed DNS resolution can still happen.
 The third type of attack is a man-in-the-middle attack, wherein DNS requests
 are intercepted in transit and then responded to by untrustworthy agents.
 A possible way to thwart this kind of attack would be to cryptographically
 sign all of DNS queries and responses but that would incur too much overhead.
 The fourth type of attack vector is using the DNS itself to attack a user,
 simulating many requests from a user so that many DNS servers will flood
 the user with responses.
 This is difficult to do and hence typically not actively planned against.
\end_layout

\begin_layout Enumerate
TCP is a connection-oriented protocol, which means a connection is established
 end-to-end and during that connection data is guaranteed to be delivered
 from the sender to the receiver.
 A connection is established using a 3-way handshake and this connection
 is persistent throughout the exchange.
 To guarantee delivery a combination of timers and ACKs (acknowledgements)
 is used to determine whether to retransmit.
 UDP (user datagram protocol) functions by sending only packets called datagrams
 with source and destination information (network participants, IP endpoints,
 DNS queries for both ends).
 No error mitigation or retransmission is provided but no latency is incurred
 either.
 The advantages of UDP over TCP are low latency, while the advantages of
 TCP over UDP is guaranteed delivery and guaranteed ordering for the 
\begin_inset Quotes eld
\end_inset

payload
\begin_inset Quotes erd
\end_inset

.
 For example DNS operates over UDP because latency is of primary importance,
 not guaranteed transmission nor ordering, but video chat applications like
 Skype use TCP because ordered audio is important for user experience.
\end_layout

\begin_layout Enumerate
An RFC is a 
\begin_inset Quotes eld
\end_inset

request for comments
\begin_inset Quotes erd
\end_inset

 is a publication put out by engineers and computer scientists at the Internet
 Engineering Task Force in order to solicit feedback on proposed changes
 to the internet.
 For example potential protocol implements are distributed as RFCs and therefore
 contain the full specifications of those protocols.
 In the specifications of the protocols implementation details are coded
 as 
\begin_inset Quotes eld
\end_inset

MUST
\begin_inset Quotes erd
\end_inset

 for necessary for agreement with the protocol and 
\begin_inset Quotes eld
\end_inset

MUST NOT
\begin_inset Quotes erd
\end_inset

 for the converse, 
\begin_inset Quotes eld
\end_inset

SHOULD
\begin_inset Quotes erd
\end_inset

 for best practices but not necessary and similarly 
\begin_inset Quotes eld
\end_inset

SHOULD NOT
\begin_inset Quotes erd
\end_inset

.
 They're important for having a universal standard for the purposes of interoper
ability on the the internet.
 
\end_layout

\begin_layout Enumerate
A client-server architecture consists typically of a permanent 
\begin_inset Quotes eld
\end_inset

always-on
\begin_inset Quotes erd
\end_inset

 host designated the server, with a static IP address, which intermittently
 connected clients,w with dynamic IP addresses can access.
 Typically clients do not communicate with each other, while servers can
 be in fact be server farms in order to distribute traffic and perform load-bala
ncing.
 A peer-to-peer network is where the are no true servers acting as focal
 points of traffic and all peers communicate with each other, fetching data
 from other peers and sending data to other peers that request it.
 Peers are intermittently connected as mentioned before and have dynamic
 IP addresses making management of such a network difficult.
 The advantage of a client-server model for a network is that it's easier
 to manage but its disadvantage is that it's expensive to scale, requiring
 literally more servers.
 The advantage of peer-to-peer is that it scales very well since peers can
 fill requests for other peers (functioning as local micro-servers).
 This allows distribution of files to be much speedier since all peers that
 have chunks of a file can send it to a requesting user.
 One disadvantage of this of course is figuring out which users have chunks
 of a file.
\end_layout

\begin_layout Enumerate
The thin-waist of the internet is alludes to the fact that all of the diversity
 in technology is at the bottom layer (physical) and at the top (application),
 and there are few choices for protocol in the transport, network, and data
 link layers.
 The advantage of this phenomenon is that the most ubiquitous parts of the
 internet (most often used/universal to all services) are inter-operable
 among services since they're all essentially running on one of two or three
 protocols.
 Furthermore having lots choice in the application layer and the physical
 layer enables experimentation in those domains.
 The disadvantages are that aging protocols like TCP/IP are difficult to
 renovate/replace.
\end_layout

\begin_layout Enumerate
The end-to-end principle is the idea that complexity should be minimal in
 the network and kept in the edges.
 Application specific functions should be kept in the end hosts rather than
 exist in the intermediary nodes.
 The reason being that implementing functionality in the network itself
 is much more difficult than in the edges.
 For example meeting reliability requirements by leveraging the network
 is much more difficult than expecting applications to retransmit, hence
 the error correcting (and congestion control) TCP is implemented on top
 of the connectionless IP.
 The principle has been violated in the implementation of DNS, a key piece
 of network functionality in the application layer.
\end_layout

\begin_layout Enumerate
Let 
\begin_inset Formula $p=.1$
\end_inset

 be the probability a user is active.
 Then the probability that at least 10 out of 35 users is active can be
 computed using the binomial distribution
\begin_inset Formula 
\[
P(X>10)=\sum_{i=11}^{35}\binom{35}{i}\left(\frac{1}{10}\right)^{i}\left(\frac{9}{10}\right)^{35-i}=0.000424298
\]

\end_inset


\end_layout

\begin_layout Enumerate
Napster, Gnutella, Bittorent, and Skype are examples of hybrid peer-to-peer
 networks.
 They have centralized servers that keep track of users coming on and off
 line and assist in locating addresses of remote parties.
 But communication between parties happens directly - voice or data chunks
 are exchanged directly between users.
 The advantage of these networks is that they allow for higher throughput,
 in the cases of the file sharing networks, since users download from many
 servers simultaneously and are cost efficient for the service providers,
 in the case of skype, since data doesn't transit through Microsoft's servers.
 The disadvantages, in the cases of the file-sharing networks is that corralling
 users in order to make their collections available to the rest of the network
 is difficult.
 Bittorrent solves this problem using trackers and Gnutella solves this
 problem using peer group leaders.
 Napster had centralized servers, which led to suits being brought directly
 against it.
\end_layout

\begin_layout Enumerate
HTTP is a stateless protocol and yes it can (and has been made) stateful
 using cookies.
 The purpose is to store information about users on things like e-commerce
 sites in order to either enhance the user experience or monetize user data.
 Cookies store client info clientside that is then managed by the browser
 and stores a key in a backend database that keeps information about the
 user on the server's host.
 Cookies are set using HTTP response message headers and then queries are
 returned using regular HTTP response message headers.
 Then cookies are queried using HTTP request headers for purposes of indexing
 into the backend database.
 
\end_layout

\begin_layout Enumerate
sfsd
\end_layout

\begin_layout Enumerate
A UDP server needs only, in theory, 1 socket to supper 
\begin_inset Formula $n$
\end_inset

 connections because the socket API allows one socket to receive from many
 endpoints and send to many endpoints.
 Since most often UDP implements very simple applications (request and reply)
 it's sufficient to take note of the source address and reply (no long-lived
 connection necessary).
 A TCP connection on the other hand needs 
\begin_inset Formula $n+1$
\end_inset

 sockets in order to maintain 
\begin_inset Formula $n$
\end_inset

 connections: 1 for the handshake operation and 1 per connection, since
 TCP connection are long-lived.
 
\end_layout

\begin_layout Enumerate
A DHT is a distributed hash table and it's used in P2P networks so that
 information about the collection of data being stored in the P2P network
 is deterministically queriable.
 When new data is added to the network a hash is calculated deterministically
 and a message is sent out, and propagates, until the the user responsible
 for knowledge of the range that the hash key is in receives it.
 Then when a query against the content stored in the network needs to be
 made a requesting user hashes the same key and the query again propagates
 to the user responsible for the key range.
 It's advantage over peer leaders is scalability.
 
\end_layout

\begin_layout Enumerate
Peer 3 doesn't update its successor information since its successor is peer
 4 and its predecessor is peer 1.
 
\end_layout

\begin_layout Enumerate
It would query peer 15 for its successor, which is 1, then 1 for its successor,
 which is 2 and on until it queries for 5's successor which is 8.
 It then declares 8 its own successor, 5 its predecessor and 5 updates its
 successor to be 6.
\end_layout

\end_body
\end_document
